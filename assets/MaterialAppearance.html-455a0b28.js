import{_ as a,V as e,W as t,X as n}from"./framework-34e2585c.js";const s={},l=n(`<h1 id="任意几何图形外观-materialappearance" tabindex="-1"><a class="header-anchor" href="#任意几何图形外观-materialappearance" aria-hidden="true">#</a> 任意几何图形外观(MaterialAppearance)</h1><p>支持材质着色的任意几何图形的外观。</p><h2 id="构造器" tabindex="-1"><a class="header-anchor" href="#构造器" aria-hidden="true">#</a> 构造器</h2><p><strong>MaterialAppearance(options)</strong></p><p>options具有以下属性的对象：</p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">material</td><td style="text-align:left;"></td><td style="text-align:left;"></td><td style="text-align:left;"><code>optional</code>用于确定片元颜色的材质。</td></tr></tbody></table><h2 id="示例代码" tabindex="-1"><a class="header-anchor" href="#示例代码" aria-hidden="true">#</a> 示例代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Webgis<span class="token punctuation">.</span>MaterialAppearance</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">material</span><span class="token operator">:</span> labelMaterial<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性" aria-hidden="true">#</a> 属性</h2><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h2>`,10),r=[l];function i(p,c){return e(),t("div",null,r)}const o=a(s,[["render",i],["__file","MaterialAppearance.html.vue"]]);export{o as default};
