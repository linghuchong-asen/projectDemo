import{_ as s,V as a,W as r,Y as t,Z as e,$ as n,X as l,D as i}from"./framework-34e2585c.js";const c={},d=l(`<h1 id="geojson数据-geojsondatasource" tabindex="-1"><a class="header-anchor" href="#geojson数据-geojsondatasource" aria-hidden="true">#</a> GeoJson数据(GeoJsonDataSource)</h1><p>GeoJson数据源。</p><h2 id="构造器" tabindex="-1"><a class="header-anchor" href="#构造器" aria-hidden="true">#</a> 构造器</h2><p><strong>GeoJsonDataSource(name)</strong></p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>name</code></td><td style="text-align:left;">String</td><td style="text-align:left;">optional数据源名，如果未定义则使用GeoJson文件名。</td></tr></tbody></table><h2 id="示例代码" tabindex="-1"><a class="header-anchor" href="#示例代码" aria-hidden="true">#</a> 示例代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> viewer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Webgis<span class="token punctuation">.</span>Viewer</span><span class="token punctuation">(</span><span class="token string">&#39;cesiumContainer&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
viewer<span class="token punctuation">.</span>dataSources<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>Webgis<span class="token punctuation">.</span>GeoJsonDataSource<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">&#39;../../SampleData/ne_10m_us_states.topojson&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">stroke</span><span class="token operator">:</span> Webgis<span class="token punctuation">.</span>Color<span class="token punctuation">.</span><span class="token constant">HOTPINK</span><span class="token punctuation">,</span>
  <span class="token literal-property property">fill</span><span class="token operator">:</span> Webgis<span class="token punctuation">.</span>Color<span class="token punctuation">.</span><span class="token constant">PINK</span><span class="token punctuation">,</span>
  <span class="token literal-property property">strokeWidth</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
  <span class="token literal-property property">markerSymbol</span><span class="token operator">:</span> <span class="token string">&#39;?&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性" aria-hidden="true">#</a> 属性</h2><p><code>static</code> <strong><a href="">GeoJsonDataSource.clampToGround : Boolean</a></strong></p><p>设置/获取几何要素是否贴地。</p><p><code>static</code> <strong><a href="">GeoJsonDataSource.crsLinkHrefs : Object</a></strong></p><p>获取一个对象，该对象将crs链接的href属性映射到一个回调函数， 该回调函数接受crs properties对象并返回一个Promise，该Promise解析为一个接受GeoJSON坐标的函数， 并将其转换为一个固定在地球上的WGS84笛卡尔坐标。 假设链接具有指定的类型。该对象中的项将优先于<code>crsLinkHrefs</code>中定义的项，</p><p><code>static</code> <strong><a href="">GeoJsonDataSource.crsLinkTypes : Object</a></strong></p><p>获取一个对象，该对象将crs链接的类型属性映射到一个回调函数， 该回调函数接受crs properties对象并返回一个promise，该promise解析为一个接受GeoJSON坐标的函数， 并将其转换为一个固定在地球上的WGS84笛卡尔坐标。 <code>crsLinkHrefs</code>中的项优先于此对象。</p><p><code>static</code> <strong><a href="">GeoJsonDataSource.crsNames : Object</a></strong></p><p>获取一个对象，该对象将crs的名称映射到采用GeoJSON坐标的回调函数并将其转换为WGS84固定于地球的笛卡尔坐标。 旧版GeoJSON也可以通过指定完整的EPSG名称将受支持的EPSG类型添加到此列表中，例如&#39; EPSG:4326&#39;。</p><p><code>static</code> <strong><a href="">GeoJsonDataSource.fill : Color</a></strong></p><p>设置/获取多边形内部的默认颜色。</p><p><code>static</code> <strong><a href="">GeoJsonDataSource.markerColor : Color</a></strong></p><p>设置/获取地图图钉默认颜色。。</p><p><code>static</code> <strong><a href="">GeoJsonDataSource.markerSize : Number</a></strong></p><p>设置/获取为地图图钉默认大小。</p><p><code>static</code> <strong><a href="">GeoJsonDataSource.markerSymbol : String</a></strong></p>`,23),p={href:"http://mapbox.com/maki/",target:"_blank",rel:"noopener noreferrer"},u=l('<p><code>static</code> <strong><a href="">GeoJsonDataSource.stroke : Color</a></strong></p><p>设置/获取折线和多边形边框默认颜色。</p><p><code>static</code> <strong><a href="">GeoJsonDataSource.strokeWidth : Number</a></strong></p><p>设置/获取折线和多边形边框默认宽度。</p><p><strong><a href="">changedEvent : Event</a></strong></p><p>获取将在基础数据更改时引发的事件。</p><p><strong><a href="">clock : DataSourceClock</a></strong></p><p>此数据源仅定义静态数据，因此此属性始终未定义。</p><p><strong><a href="">clustering : EntityCluster</a></strong></p><p>设置/获取此数据源的聚类选项。该对象可以在多个数据源之间共享。</p><p><strong><a href="">credit : Credit</a></strong></p><p>获取将显示为数据源的版权。</p><p><strong><a href="">entities : EntityCollection</a></strong></p><p>获取实体实例集合。</p><p><strong><a href="">errorEvent : Event</a></strong></p><p>获取在处理过程中遇到错误时将引发的事件。</p><p><strong><a href="">isLoading : Boolean</a></strong></p><p>获取是否正在加载数据。</p><p><strong><a href="">loadingEvent : Event</a></strong></p><p>获取将在数据源启动或停止加载时引发的事件。</p><p><strong><a href="">name : String</a></strong></p><p>设置/获取实例名字。</p><p><strong><a href="">show : Boolean</a></strong></p><p>获取是否应显示此数据源。</p><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h2><p><code>static</code> <strong><a href="">GeoJsonDataSource.load(data, options): Promise&lt;GeoJsonDataSource&gt;</a></strong></p><p>创建一个根据提供的GeoJSON或TopoJSON数据创建一个新实例的Promise。</p>',27),h=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),g=t("td",{style:{"text-align":"left"}},[t("code",null,"data")],-1),_={style:{"text-align":"left"}},f={href:"https://www.vvpstk.com/public/Cesium/Documentation/Resource.html",target:"_blank",rel:"noopener noreferrer"},y=t("td",{style:{"text-align":"left"}},"url，GeoJSON对象，或者要加载的TopoJSON对象。",-1),m=t("p",null,"options对象拥有以下属性：",-1),x=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Default"),t("th",{style:{"text-align":"left"}},"Description")])],-1),k=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"sourceUri")]),t("td",{style:{"text-align":"left"}},"String"),t("td",{style:{"text-align":"left"}}),t("td",{style:{"text-align":"left"}},"optional重写要用于解析相对链接的url。")],-1),S=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"markerSize")]),t("td",{style:{"text-align":"left"}},"Number"),t("td",{style:{"text-align":"left"}},[t("code",null,"GeoJsonDataSource.markerSize")]),t("td",{style:{"text-align":"left"}},"optional为每个点创建一个默认大小的地图图钉（像素）。")],-1),b=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"markerSymbol")]),t("td",{style:{"text-align":"left"}},"String"),t("td",{style:{"text-align":"left"}},[t("code",null,"GeoJsonDataSource.markerSymbol")]),t("td",{style:{"text-align":"left"}},"optional为每个点创建一个默认符号的地图图钉（像素）。")],-1),D=t("td",{style:{"text-align":"left"}},[t("code",null,"markerColor")],-1),G={style:{"text-align":"left"}},v={href:"https://www.vvpstk.com/public/Cesium/Documentation/Color.html",target:"_blank",rel:"noopener noreferrer"},J=t("td",{style:{"text-align":"left"}},[t("code",null,"GeoJsonDataSource.markerColor")],-1),C=t("td",{style:{"text-align":"left"}},"optional为每个点创建一个默认颜色的地图图钉（像素）。",-1),w=t("td",{style:{"text-align":"left"}},[t("code",null,"stroke")],-1),N={style:{"text-align":"left"}},O={href:"https://www.vvpstk.com/public/Cesium/Documentation/Color.html",target:"_blank",rel:"noopener noreferrer"},T=t("td",{style:{"text-align":"left"}},[t("code",null,"GeoJsonDataSource.stroke")],-1),E=t("td",{style:{"text-align":"left"}},"optional折线和多边形边框默认颜色。",-1),W=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"strokeWidth")]),t("td",{style:{"text-align":"left"}},"Number"),t("td",{style:{"text-align":"left"}},[t("code",null,"GeoJsonDataSource.strokeWidth")]),t("td",{style:{"text-align":"left"}},"optional折线和多边形边框默认宽度。")],-1),j=t("td",{style:{"text-align":"left"}},[t("code",null,"fill")],-1),P={style:{"text-align":"left"}},B={href:"https://www.vvpstk.com/public/Cesium/Documentation/Color.html",target:"_blank",rel:"noopener noreferrer"},L=t("td",{style:{"text-align":"left"}},[t("code",null,"GeoJsonDataSource.fill")],-1),V=t("td",{style:{"text-align":"left"}},"optional多边形内部的默认颜色。",-1),z=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"clampToGround")]),t("td",{style:{"text-align":"left"}},"Boolean"),t("td",{style:{"text-align":"left"}},[t("code",null,"GeoJsonDataSource.clampToGround")]),t("td",{style:{"text-align":"left"}},"optional决定几何要素是否贴地。")],-1),H=t("td",{style:{"text-align":"left"}},[t("code",null,"credit")],-1),I={style:{"text-align":"left"}},R={href:"https://www.vvpstk.com/public/Cesium/Documentation/Credit.html",target:"_blank",rel:"noopener noreferrer"},K=t("td",{style:{"text-align":"left"}},null,-1),U=t("td",{style:{"text-align":"left"}},"optional版权信息。",-1),M=t("p",null,"返回值:将在数据加载时解析的Promise。",-1),X=t("p",null,[t("strong",null,[t("a",{href:""},"load(data, options): Promise<GeoJsonDataSource>")])],-1),Y=t("p",null,"异步加载提供的GeoJSON或TopoJSON数据，替换任何现有数据。",-1),Z=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),$=t("td",{style:{"text-align":"left"}},[t("code",null,"data")],-1),q={style:{"text-align":"left"}},A={href:"https://www.vvpstk.com/public/Cesium/Documentation/Resource.html",target:"_blank",rel:"noopener noreferrer"},F=t("td",{style:{"text-align":"left"}},"url, GeoJSON对象, 或者要加载的TopoJSON对象。",-1),Q=t("p",null,"options对象拥有以下属性：",-1),tt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Default"),t("th",{style:{"text-align":"left"}},"Description")])],-1),et=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"sourceUri")]),t("td",{style:{"text-align":"left"}},"String"),t("td",{style:{"text-align":"left"}}),t("td",{style:{"text-align":"left"}},"optional重写要用于解析相对链接的url。")],-1),ot=t("td",{style:{"text-align":"left"}},[t("code",null,"describe")],-1),nt={style:{"text-align":"left"}},lt={href:"https://www.vvpstk.com/public/Cesium/Documentation/GeoJsonDataSource.html#~describe",target:"_blank",rel:"noopener noreferrer"},st=t("td",{style:{"text-align":"left"}},[t("code",null,"GeoJsonDataSource.defaultDescribeProperty")],-1),at=t("td",{style:{"text-align":"left"}},"optional返回一个属性对象(或一个字符串)的函数，该函数将属性转换为html描述。",-1),rt=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"markerSize")]),t("td",{style:{"text-align":"left"}},"Number"),t("td",{style:{"text-align":"left"}},[t("code",null,"GeoJsonDataSource.markerSize")]),t("td",{style:{"text-align":"left"}},"optional为每个点创建一个默认大小的地图图钉（像素）。")],-1),it=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"markerSymbol")]),t("td",{style:{"text-align":"left"}},"String"),t("td",{style:{"text-align":"left"}},[t("code",null,"GeoJsonDataSource.markerSymbol")]),t("td",{style:{"text-align":"left"}},"optional为每个点创建一个默认符号的地图图钉（像素）。")],-1),ct=t("td",{style:{"text-align":"left"}},[t("code",null,"markerColor")],-1),dt={style:{"text-align":"left"}},pt={href:"https://www.vvpstk.com/public/Cesium/Documentation/Color.html",target:"_blank",rel:"noopener noreferrer"},ut=t("td",{style:{"text-align":"left"}},[t("code",null,"GeoJsonDataSource.markerColor")],-1),ht=t("td",{style:{"text-align":"left"}},"optional为每个点创建一个默认颜色的地图图钉（像素）。",-1),gt=t("td",{style:{"text-align":"left"}},[t("code",null,"stroke")],-1),_t={style:{"text-align":"left"}},ft={href:"https://www.vvpstk.com/public/Cesium/Documentation/Color.html",target:"_blank",rel:"noopener noreferrer"},yt=t("td",{style:{"text-align":"left"}},[t("code",null,"GeoJsonDataSource.stroke")],-1),mt=t("td",{style:{"text-align":"left"}},"optional折线和多边形边框默认颜色。",-1),xt=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"strokeWidth")]),t("td",{style:{"text-align":"left"}},"Number"),t("td",{style:{"text-align":"left"}},[t("code",null,"GeoJsonDataSource.strokeWidth")]),t("td",{style:{"text-align":"left"}},"optional折线和多边形边框默认宽度。")],-1),kt=t("td",{style:{"text-align":"left"}},[t("code",null,"fill")],-1),St={style:{"text-align":"left"}},bt={href:"https://www.vvpstk.com/public/Cesium/Documentation/Color.html",target:"_blank",rel:"noopener noreferrer"},Dt=t("td",{style:{"text-align":"left"}},[t("code",null,"GeoJsonDataSource.fill")],-1),Gt=t("td",{style:{"text-align":"left"}},"optional多边形内部的默认颜色。",-1),vt=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"clampToGround")]),t("td",{style:{"text-align":"left"}},"Boolean"),t("td",{style:{"text-align":"left"}},[t("code",null,"GeoJsonDataSource.clampToGround")]),t("td",{style:{"text-align":"left"}},"optional决定几何要素是否贴地。")],-1),Jt=t("td",{style:{"text-align":"left"}},[t("code",null,"credit")],-1),Ct={style:{"text-align":"left"}},wt={href:"https://www.vvpstk.com/public/Cesium/Documentation/Credit.html",target:"_blank",rel:"noopener noreferrer"},Nt=t("td",{style:{"text-align":"left"}},null,-1),Ot=t("td",{style:{"text-align":"left"}},"optional版权信息。",-1),Tt=t("p",null,"返回值: 将在数据加载时解析的Promise。",-1);function Et(Wt,jt){const o=i("ExternalLinkIcon");return a(),r("div",null,[d,t("p",null,[e("设置/获取地图图钉默认符号。 任何有效的 "),t("a",p,[e("Maki"),n(o)]),e(" 标识符，任何单个字符，或空白（如果不使用符号）。")]),u,t("table",null,[h,t("tbody",null,[t("tr",null,[g,t("td",_,[t("a",f,[e("Resource"),n(o)]),e(" | String | Object")]),y])])]),m,t("table",null,[x,t("tbody",null,[k,S,b,t("tr",null,[D,t("td",G,[t("a",v,[e("Color"),n(o)])]),J,C]),t("tr",null,[w,t("td",N,[t("a",O,[e("Color"),n(o)])]),T,E]),W,t("tr",null,[j,t("td",P,[t("a",B,[e("Color"),n(o)])]),L,V]),z,t("tr",null,[H,t("td",I,[t("a",R,[e("Credit"),n(o)]),e(" | String")]),K,U])])]),M,X,Y,t("table",null,[Z,t("tbody",null,[t("tr",null,[$,t("td",q,[t("a",A,[e("Resource"),n(o)]),e(" | String | Object")]),F])])]),Q,t("table",null,[tt,t("tbody",null,[et,t("tr",null,[ot,t("td",nt,[t("a",lt,[e("GeoJsonDataSource~describe"),n(o)])]),st,at]),rt,it,t("tr",null,[ct,t("td",dt,[t("a",pt,[e("Color"),n(o)])]),ut,ht]),t("tr",null,[gt,t("td",_t,[t("a",ft,[e("Color"),n(o)])]),yt,mt]),xt,t("tr",null,[kt,t("td",St,[t("a",bt,[e("Color"),n(o)])]),Dt,Gt]),vt,t("tr",null,[Jt,t("td",Ct,[t("a",wt,[e("Credit"),n(o)]),e(" | String")]),Nt,Ot])])]),Tt])}const Bt=s(c,[["render",Et],["__file","GeoJsonDataSource.html.vue"]]);export{Bt as default};
