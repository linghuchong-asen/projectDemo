import{_ as s,V as r,W as i,X as t,Y as e,$ as o,Z as n,D as a}from"./framework-13182686.js";const c={},d=t("h1",{id:"墙-wallgraphics",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#墙-wallgraphics","aria-hidden":"true"},"#"),e(" 墙(WallGraphics)")],-1),h=t("p",null,"描述定义为线状带和可选的最大和最小高度的二维墙壁",-1),_=t("h2",{id:"构造器",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#构造器","aria-hidden":"true"},"#"),e(" 构造器")],-1),p=t("p",null,[t("strong",null,"WallGraphics(options)")],-1),u=t("p",null,"对象拥有以下属性：",-1),f=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Default"),t("th",{style:{"text-align":"left"}},"Description")])],-1),g=t("td",{style:{"text-align":"left"}},[t("code",null,"show")],-1),y={style:{"text-align":"left"}},m={href:"https://www.vvpstk.com/public/Cesium/Documentation/Property.html",target:"_blank",rel:"noopener noreferrer"},x=t("td",{style:{"text-align":"left"}},[t("code",null,"true")],-1),w=t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("指定显隐性。")],-1),b=t("td",{style:{"text-align":"left"}},[t("code",null,"positions")],-1),D={style:{"text-align":"left"}},k={href:"https://www.vvpstk.com/public/Cesium/Documentation/Property.html",target:"_blank",rel:"noopener noreferrer"},v=t("td",{style:{"text-align":"left"}},null,-1),C={style:{"text-align":"left"}},P=t("code",null,"optional",-1),E={href:"https://www.vvpstk.com/public/Cesium/Documentation/PolygonHierarchy.html",target:"_blank",rel:"noopener noreferrer"},W=t("code",null,"PolygonHierarchy",-1),V=t("td",{style:{"text-align":"left"}},[t("code",null,"minimumHeights")],-1),G={style:{"text-align":"left"}},A={href:"https://www.vvpstk.com/public/Cesium/Documentation/Property.html",target:"_blank",rel:"noopener noreferrer"},H=t("td",{style:{"text-align":"left"}},null,-1),N=t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("最小高度数组。当设置该值后，positions中设置的高度值将无效。")],-1),B=t("td",{style:{"text-align":"left"}},[t("code",null,"maximumHeights")],-1),I={style:{"text-align":"left"}},M={href:"https://www.vvpstk.com/public/Cesium/Documentation/Property.html",target:"_blank",rel:"noopener noreferrer"},S=t("td",{style:{"text-align":"left"}},null,-1),L=t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("最大高度数组。当设置该值后，positions中设置的高度值将无效。")],-1),R=t("td",{style:{"text-align":"left"}},[t("code",null,"granularity")],-1),T={style:{"text-align":"left"}},K={href:"https://www.vvpstk.com/public/Cesium/Documentation/Property.html",target:"_blank",rel:"noopener noreferrer"},X=t("td",{style:{"text-align":"left"}},[t("code",null,"Cesium.Math.RADIANS_PER_DEGREE")],-1),Y=t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("指定每个纬度和经度点之间的角度距离。")],-1),Z=t("td",{style:{"text-align":"left"}},[t("code",null,"fill")],-1),$={style:{"text-align":"left"}},j={href:"https://www.vvpstk.com/public/Cesium/Documentation/Property.html",target:"_blank",rel:"noopener noreferrer"},q=t("td",{style:{"text-align":"left"}},[t("code",null,"true")],-1),z=t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("指定是否使用提供的材质填充。")],-1),F=t("td",{style:{"text-align":"left"}},[t("code",null,"material")],-1),J={style:{"text-align":"left"}},O={href:"https://www.vvpstk.com/public/Cesium/Documentation/MaterialProperty.html",target:"_blank",rel:"noopener noreferrer"},Q=t("td",{style:{"text-align":"left"}},[t("code",null,"Color.WHITE")],-1),U=t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("用于填充的材质。")],-1),tt=t("td",{style:{"text-align":"left"}},[t("code",null,"outline")],-1),et={style:{"text-align":"left"}},lt={href:"https://www.vvpstk.com/public/Cesium/Documentation/Property.html",target:"_blank",rel:"noopener noreferrer"},ot=t("td",{style:{"text-align":"left"}},[t("code",null,"false")],-1),nt=t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("是否显示边框。")],-1),st=t("td",{style:{"text-align":"left"}},[t("code",null,"outlineColor")],-1),rt={style:{"text-align":"left"}},it={href:"https://www.vvpstk.com/public/Cesium/Documentation/Property.html",target:"_blank",rel:"noopener noreferrer"},at=t("td",{style:{"text-align":"left"}},[t("code",null,"Color.BLACK")],-1),ct={style:{"text-align":"left"}},dt=t("code",null,"optional",-1),ht={href:"https://www.vvpstk.com/public/Cesium/Documentation/Color.html",target:"_blank",rel:"noopener noreferrer"},_t=t("code",null,"Color",-1),pt=t("td",{style:{"text-align":"left"}},[t("code",null,"outlineWidth")],-1),ut={style:{"text-align":"left"}},ft={href:"https://www.vvpstk.com/public/Cesium/Documentation/Property.html",target:"_blank",rel:"noopener noreferrer"},gt=t("td",{style:{"text-align":"left"}},[t("code",null,"1.0")],-1),yt=t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("边框宽度。")],-1),mt=t("td",{style:{"text-align":"left"}},[t("code",null,"shadows")],-1),xt={style:{"text-align":"left"}},wt={href:"https://www.vvpstk.com/public/Cesium/Documentation/Property.html",target:"_blank",rel:"noopener noreferrer"},bt=t("td",{style:{"text-align":"left"}},[t("code",null,"ShadowMode.DISABLED")],-1),Dt=t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("从每个光源投射或接收阴影的模式。")],-1),kt=t("td",{style:{"text-align":"left"}},[t("code",null,"distanceDisplayCondition")],-1),vt={style:{"text-align":"left"}},Ct={href:"https://www.vvpstk.com/public/Cesium/Documentation/Property.html",target:"_blank",rel:"noopener noreferrer"},Pt=t("td",{style:{"text-align":"left"}},null,-1),Et=t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("指定在距相机某个距离内显示。")],-1),Wt=t("h2",{id:"属性",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#属性","aria-hidden":"true"},"#"),e(" 属性")],-1),Vt=t("p",null,[t("code",null,"readonly"),e(),t("strong",null,[t("a",{href:""},"definitionChanged : Event")])],-1),Gt=t("p",null,"获取每当更改或修改属性或子属性时引发的事件。",-1),At=t("p",null,[t("strong",null,[t("a",{href:""},"distanceDisplayCondition : Property")])],-1),Ht={href:"https://www.vvpstk.com/public/Cesium/Documentation/DistanceDisplayCondition.html",target:"_blank",rel:"noopener noreferrer"},Nt=t("code",null,"DistanceDisplayCondition",-1),Bt=n('<p><strong><a href="">fill : Property</a></strong></p><p>设置/获取是否使用提供的材质填充。</p><p>Default Value: <code>true</code></p><p><strong><a href="">granularity : Property</a></strong></p><p>设置/获取每个纬度和经度点之间的角度距离。</p><p>Default Value: <code>{CesiumMath.RADIANS_PER_DEGREE}</code></p><p><strong><a href="">material : MaterialProperty</a></strong></p><p>设置/获取用于填充的材质。</p><p>Default Value: <code>Color.WHITE</code></p><p><strong><a href="">maximumHeights : Property</a></strong></p><p>设置/获取 设置/获取该属性指定要用于墙顶而不是每个位置的高度数组。如果已定义，则数组的长度必须与 <code>Wall#positions</code> 相同。</p><p><strong><a href="">minimumHeights : Property</a></strong></p><p>设置/获取该属性指定要用于墙底而不是地球表面的高度数组。如果已定义，则数组的长度必须与 <code>Wall#positions</code> 相同。</p><p><strong><a href="">outline : Property</a></strong></p><p>设置/获取是否显示边框。</p><p>Default Value: <code>false</code></p><p><strong><a href="">outlineColor : Property</a></strong></p>',17),It={href:"https://www.vvpstk.com/public/Cesium/Documentation/Color.html",target:"_blank",rel:"noopener noreferrer"},Mt=t("code",null,"Color",-1),St=t("p",null,[e("Default Value: "),t("code",null,"Color.BLACK")],-1),Lt=t("p",null,[t("strong",null,[t("a",{href:""},"outlineWidth : Property")])],-1),Rt=t("p",null,"设置/获取边框宽度。",-1),Tt=t("p",null,[e("Default Value: "),t("code",null,"1.0")],-1),Kt=t("p",null,[t("strong",null,[t("a",{href:""},"positions : Property")])],-1),Xt={href:"https://www.vvpstk.com/public/Cesium/Documentation/PolygonHierarchy.html",target:"_blank",rel:"noopener noreferrer"},Yt=t("code",null,"PolygonHierarchy",-1),Zt={href:"https://www.vvpstk.com/public/Cesium/Documentation/Cartesian3.html",target:"_blank",rel:"noopener noreferrer"},$t=t("code",null,"Cartesian3",-1),jt=n('<p><a href=""><strong>shadows : Property</strong></a></p><p>从每个光源投射或接收阴影的模式。</p><p>Default Value: <code>ShadowMode.DISABLED</code></p><p><strong><a href="">show : Property</a></strong></p><p>设置/获取显隐性。</p><p>Default Value: <code>true</code></p><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h2><p><strong><a href="">clone(result): WallGraphics</a></strong></p><p>复制实例。</p>',9),qt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),zt=t("td",{style:{"text-align":"left"}},[t("code",null,"result")],-1),Ft={style:{"text-align":"left"}},Jt={href:"https://www.vvpstk.com/public/Cesium/Documentation/WallGraphics.html",target:"_blank",rel:"noopener noreferrer"},Ot=t("td",{style:{"text-align":"left"}},"optional用来存储结果的对象。",-1),Qt=t("p",null,"返回值: 修改后的结果参数或一个新实例（如果未提供）。",-1),Ut=t("p",null,[t("strong",null,[t("a",{href:""},"merge(source)")])],-1),te=t("p",null,"合并两个对象的属性，最终合并出的属性有以下特点： 就某个属性来说，如果A的属性已定义，则合并出的C的属性即为A的属性，反之C中将为B的属性。",-1),ee=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),le=t("td",{style:{"text-align":"left"}},[t("code",null,"source")],-1),oe={style:{"text-align":"left"}},ne={href:"https://www.vvpstk.com/public/Cesium/Documentation/WallGraphics.html",target:"_blank",rel:"noopener noreferrer"},se=t("td",{style:{"text-align":"left"}},"要被合并到这个对象的对象。",-1);function re(ie,ae){const l=a("ExternalLinkIcon");return r(),i("div",null,[d,h,_,p,u,t("table",null,[f,t("tbody",null,[t("tr",null,[g,t("td",y,[t("a",m,[e("Property"),o(l)])]),x,w]),t("tr",null,[b,t("td",D,[t("a",k,[e("Property"),o(l)])]),v,t("td",C,[P,e("一个属性，它指定定义墙顶的 "),t("a",E,[W,o(l)]),e(" 位置的数组。")])]),t("tr",null,[V,t("td",G,[t("a",A,[e("Property"),o(l)])]),H,N]),t("tr",null,[B,t("td",I,[t("a",M,[e("Property"),o(l)])]),S,L]),t("tr",null,[R,t("td",T,[t("a",K,[e("Property"),o(l)])]),X,Y]),t("tr",null,[Z,t("td",$,[t("a",j,[e("Property"),o(l)])]),q,z]),t("tr",null,[F,t("td",J,[t("a",O,[e("MaterialProperty"),o(l)])]),Q,U]),t("tr",null,[tt,t("td",et,[t("a",lt,[e("Property"),o(l)])]),ot,nt]),t("tr",null,[st,t("td",rt,[t("a",it,[e("Property"),o(l)])]),at,t("td",ct,[dt,e("边框颜色"),t("a",ht,[_t,o(l)]),e("。")])]),t("tr",null,[pt,t("td",ut,[t("a",ft,[e("Property"),o(l)])]),gt,yt]),t("tr",null,[mt,t("td",xt,[t("a",wt,[e("Property"),o(l)])]),bt,Dt]),t("tr",null,[kt,t("td",vt,[t("a",Ct,[e("Property"),o(l)])]),Pt,Et])])]),Wt,Vt,Gt,At,t("p",null,[e("设置/获取获取显示条件"),t("a",Ht,[Nt,o(l)]),e(",即在距相机某个距离内显示。")]),Bt,t("p",null,[e("设置/获取边框颜色"),t("a",It,[Mt,o(l)]),e("。")]),St,Lt,Rt,Tt,Kt,t("p",null,[e("设置/获取墙体对象集合串，是一个"),t("a",Xt,[Yt,o(l)]),e("。类型的对象。 the Property specifying the array of "),t("a",Zt,[$t,o(l)]),e(" positions which define the top of the wall.")]),jt,t("table",null,[qt,t("tbody",null,[t("tr",null,[zt,t("td",Ft,[t("a",Jt,[e("WallGraphics"),o(l)])]),Ot])])]),Qt,Ut,te,t("table",null,[ee,t("tbody",null,[t("tr",null,[le,t("td",oe,[t("a",ne,[e("WallGraphics"),o(l)])]),se])])])])}const de=s(c,[["render",re],["__file","WallGraphics.html.vue"]]);export{de as default};
