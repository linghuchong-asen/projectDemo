import{_ as r,V as h,W as c,X as e,Y as t,$ as o,a0 as a,Z as i,D as s}from"./framework-13182686.js";const u={},_=i(`<h1 id="模型-model" tabindex="-1"><a class="header-anchor" href="#模型-model" aria-hidden="true">#</a> 模型(Model)</h1><p>加载glTF,glb格式的模型。</p><h2 id="构造器" tabindex="-1"><a class="header-anchor" href="#构造器" aria-hidden="true">#</a> 构造器</h2><p><strong>Model(url)</strong></p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>url</code>🚩</td><td style="text-align:left;">String</td><td style="text-align:left;">.gltf 或者 .glb文件的路径。</td></tr></tbody></table><h2 id="示例代码" tabindex="-1"><a class="header-anchor" href="#示例代码" aria-hidden="true">#</a> 示例代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> model <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Webgis</span><span class="token punctuation">(</span><span class="token string">&quot;../model/model.glb&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性" aria-hidden="true">#</a> 属性</h2><h3 id="distancedisplaycondition-distancedisplaycondition" tabindex="-1"><a class="header-anchor" href="#distancedisplaycondition-distancedisplaycondition" aria-hidden="true">#</a> distanceDisplayCondition : <a href="">DistanceDisplayCondition</a></h3><p>设置或获取模型到相机的显示距离。</p><p>默认值: <code>undefined</code></p><h3 id="id-t" tabindex="-1"><a class="header-anchor" href="#id-t" aria-hidden="true">#</a> id : &lt;T&gt;</h3><p>选择模型时返回的用户定义对象。</p><p>默认值: <code>undefined</code></p>`,14),p={id:"ismodelready-boolean",tabindex:"-1"},m=e("a",{class:"header-anchor",href:"#ismodelready-boolean","aria-hidden":"true"},"#",-1),b=e("p",null,"🚩",-1),f=e("p",null,"模型是否加载完成状态。",-1),x={id:"name-string",tabindex:"-1"},y=e("a",{class:"header-anchor",href:"#name-string","aria-hidden":"true"},"#",-1),g=e("p",null,"🚩",-1),w=e("p",null,"模型的名称，默认值为一个空字符串。",-1),v=e("div",{class:"hint-container note"},[e("p",{class:"hint-container-title"},"注"),e("p",null,"若需要通过名称获取模型，请设置该属性。")],-1),k={id:"position-vector3",tabindex:"-1"},D=e("a",{class:"header-anchor",href:"#position-vector3","aria-hidden":"true"},"#",-1),C=e("p",null,"指定模型放置的位置。",-1),z=e("p",null,[t("默认值: "),e("code",null,"原点位置")],-1),S={id:"maximumscale-number",tabindex:"-1"},M=e("a",{class:"header-anchor",href:"#maximumscale-number","aria-hidden":"true"},"#",-1),V={href:"https://www.vvpstk.com/public/Cesium/Documentation/Model.html#minimumPixelSize",target:"_blank",rel:"noopener noreferrer"},E=e("code",null,"Model#minimumPixelSize",-1),N={id:"minimumpixelsize-number",tabindex:"-1"},L=e("a",{class:"header-anchor",href:"#minimumpixelsize-number","aria-hidden":"true"},"#",-1),P=i('<p>不考虑缩放的模型的近似最小像素大小。 这可以用来确保即使在查看器缩小时模型也是可见的。当<code>0.0</code>时，不强制执行最小大小。</p><p>默认值: <code>0.0</code></p><h3 id="outlinecolor-color" tabindex="-1"><a class="header-anchor" href="#outlinecolor-color" aria-hidden="true">#</a> outlineColor : <a href="">Color</a></h3><p>渲染外轮廓线使用的颜色。</p><p>默认值: <code>Color.BLACK</code></p><h3 id="shadows-shadowmode" tabindex="-1"><a class="header-anchor" href="#shadows-shadowmode" aria-hidden="true">#</a> shadows : <a href="">ShadowMode</a></h3><p>确定模型是否从每个光源投射或接收阴影。</p><p>默认值: <code>ShadowMode.ENABLED</code></p>',8),T={id:"show-boolean",tabindex:"-1"},A=e("a",{class:"header-anchor",href:"#show-boolean","aria-hidden":"true"},"#",-1),B=e("p",null,"模型是否显示。",-1),I=e("p",null,[t("默认值: "),e("code",null,"true")],-1),R={id:"showoutline-boolean",tabindex:"-1"},F=e("a",{class:"header-anchor",href:"#showoutline-boolean","aria-hidden":"true"},"#",-1),X=e("p",null,"当为true时，显示外边框；当为false时，不显示外边框。",-1),Y=e("p",null,[t("默认值: "),e("code",null,"true")],-1),Z={id:"silhouettecolor-color",tabindex:"-1"},j=e("a",{class:"header-anchor",href:"#silhouettecolor-color","aria-hidden":"true"},"#",-1),W=e("p",null,"轮廓的颜色。",-1),q=e("p",null,[t("默认值: "),e("code",null,"Color.RED")],-1),G={id:"silhouettesize-number",tabindex:"-1"},K=e("a",{class:"header-anchor",href:"#silhouettesize-number","aria-hidden":"true"},"#",-1),O=i('<p>轮廓的大小（以像素为单位）。</p><p>默认值: <code>0.0</code></p><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h2><h3 id="setrotation-x-y-z" tabindex="-1"><a class="header-anchor" href="#setrotation-x-y-z" aria-hidden="true">#</a> setRotation(X,Y,Z)</h3><table><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>X</td><td>rad:Float</td><td>绕局部空间的X轴旋转模型，以弧度制表示。</td></tr><tr><td>Y</td><td>rad:Float</td><td>绕局部空间的Y轴旋转模型，以弧度制表示。</td></tr><tr><td>Z</td><td>rad:Float</td><td>绕局部空间的Z轴旋转模型，以弧度制表示。</td></tr></tbody></table><p>设置批量模型中单个模型的旋转方向。</p><h3 id="setscale-scale" tabindex="-1"><a class="header-anchor" href="#setscale-scale" aria-hidden="true">#</a> setScale(scale)</h3>',7),$=e("thead",null,[e("tr",null,[e("th",null,"Name"),e("th",null,"Type"),e("th",null,"Description")])],-1),H=e("td",null,"scale",-1),J=e("td",null,"模型的局部缩放。",-1),Q=e("p",null,"设置批量模型中单个模型的缩放。",-1),U=e("h3",{id:"destroy",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#destroy","aria-hidden":"true"},"#"),t(" destroy()")],-1),ee=e("p",null,"销毁此对象持有的WebGL资源。",-1),te=e("code",null,"isDestroyed",-1),oe={href:"https://www.vvpstk.com/public/Cesium/Documentation/DeveloperError.html",target:"_blank",rel:"noopener noreferrer"},ae=e("code",null,"DeveloperError",-1),ne=e("code",null,"undefined",-1),de={id:"isdestroyed-boolean",tabindex:"-1"},se=e("a",{class:"header-anchor",href:"#isdestroyed-boolean","aria-hidden":"true"},"#",-1),ie=e("p",null,[t("如果该对象已经被销毁，返回"),e("code",null,"true"),t(";否则返回"),e("code",null,"false")],-1);function le(re,he){const n=s("font"),d=s("RouterLink"),l=s("ExternalLinkIcon");return h(),c("div",null,[_,e("h3",p,[m,t(" isModelReady: "),o(n,{color:"gray"},{default:a(()=>[t("boolean")]),_:1})]),b,f,e("h3",x,[y,t(" name: "),o(n,{color:"gray"},{default:a(()=>[t("string")]),_:1})]),g,w,v,e("h3",k,[D,t(" position: "),o(d,{to:"/APIdocs/math/Vector3.html"},{default:a(()=>[t("Vector3")]),_:1})]),C,z,e("h3",S,[M,t(" maximumScale : "),o(n,{color:"gray"},{default:a(()=>[t("number")]),_:1})]),e("p",null,[t("这可以用来给"),e("a",V,[E,o(l)]),t("一个上限，确保模型永远不会是一个不合理的比例。")]),e("h3",N,[L,t(" minimumPixelSize : "),o(n,{color:"gray"},{default:a(()=>[t("number")]),_:1})]),P,e("h3",T,[A,t(" show : "),o(n,{color:"gray"},{default:a(()=>[t("boolean")]),_:1})]),B,I,e("h3",R,[F,t(" showOutline : "),o(n,{color:"gray"},{default:a(()=>[t("boolean")]),_:1})]),X,Y,e("h3",Z,[j,t(" silhouetteColor : "),o(d,{to:"/APIdocs/math/Color.html"},{default:a(()=>[t("Color")]),_:1})]),W,q,e("h3",G,[K,t(" silhouetteSize : "),o(n,{color:"gray"},{default:a(()=>[t("number")]),_:1})]),O,e("table",null,[$,e("tbody",null,[e("tr",null,[H,e("td",null,[o(d,{to:"/APIdocs/math/Vector3.html"},{default:a(()=>[t("Vector3")]),_:1})]),J])])]),Q,U,ee,e("p",null,[t("一旦对象被销毁，它将不能在使用; 调用除"),te,t("之外的任何函数都会导致"),e("a",oe,[ae,o(l)]),t("异常。 因此，将返回值("),ne,t(")赋给对象，如示例所示。")]),e("h3",de,[se,t(" isDestroyed(): "),o(n,{color:"gray"},{default:a(()=>[t("boolean")]),_:1})]),ie])}const ue=r(u,[["render",le],["__file","Model.html.vue"]]);export{ue as default};
