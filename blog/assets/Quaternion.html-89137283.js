import{_ as o,V as a,W as s,X as t,Y as e,$ as n,Z as h,D as i}from"./framework-13182686.js";const l={},d=t("h1",{id:"四元数-quaternion",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#四元数-quaternion","aria-hidden":"true"},"#"),e(" 四元数（Quaternion）")],-1),c={href:"http://en.wikipedia.org/wiki/Quaternion",target:"_blank",rel:"noopener noreferrer"},p={href:"https://en.wikipedia.org/wiki/Quaternions_and_spatial_rotation",target:"_blank",rel:"noopener noreferrer"},_=h(`<p>对 Quaternion 实例进行遍历将按相应的顺序生成它的分量 (x, y, z, w)。</p><h2 id="代码示例" tabindex="-1"><a class="header-anchor" href="#代码示例" aria-hidden="true">#</a> 代码示例</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> quaternion <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Quaternion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
quaternion<span class="token punctuation">.</span><span class="token function">setFromAxisAngle</span><span class="token punctuation">(</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token keyword">const</span> vector <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> vector<span class="token punctuation">.</span><span class="token function">applyQuaternion</span><span class="token punctuation">(</span> quaternion <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="构造函数" tabindex="-1"><a class="header-anchor" href="#构造函数" aria-hidden="true">#</a> 构造函数</h2><h3 id="quaternion-x-float-y-float-z-float-w-float" tabindex="-1"><a class="header-anchor" href="#quaternion-x-float-y-float-z-float-w-float" aria-hidden="true">#</a> Quaternion( x : Float, y : Float, z : Float, w : Float )</h3><p>x - x 坐标 y - y 坐标 z - z 坐标 w - w 坐标</p><h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性" aria-hidden="true">#</a> 属性</h2>`,7),f={id:"isquaternion-boolean",tabindex:"-1"},u=t("a",{class:"header-anchor",href:"#isquaternion-boolean","aria-hidden":"true"},"#",-1),m={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.isQuaternion",target:"_blank",rel:"noopener noreferrer"},g=t("p",null,"Read-only flag to check if a given object is of type Quaternion.",-1),b={id:"x-float",tabindex:"-1"},x=t("a",{class:"header-anchor",href:"#x-float","aria-hidden":"true"},"#",-1),k={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.x",target:"_blank",rel:"noopener noreferrer"},z={id:"y-float",tabindex:"-1"},y=t("a",{class:"header-anchor",href:"#y-float","aria-hidden":"true"},"#",-1),Q={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.y",target:"_blank",rel:"noopener noreferrer"},j={id:"z-float",tabindex:"-1"},q=t("a",{class:"header-anchor",href:"#z-float","aria-hidden":"true"},"#",-1),w={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.z",target:"_blank",rel:"noopener noreferrer"},v={id:"w-float",tabindex:"-1"},F=t("a",{class:"header-anchor",href:"#w-float","aria-hidden":"true"},"#",-1),A={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.w",target:"_blank",rel:"noopener noreferrer"},E=t("h2",{id:"方法",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#方法","aria-hidden":"true"},"#"),e(" 方法")],-1),V={id:"angleto-q-quaternion-float",tabindex:"-1"},T=t("a",{class:"header-anchor",href:"#angleto-q-quaternion-float","aria-hidden":"true"},"#",-1),I={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.angleTo",target:"_blank",rel:"noopener noreferrer"},O={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion",target:"_blank",rel:"noopener noreferrer"},B={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion",target:"_blank",rel:"noopener noreferrer"},N={id:"clone-quaternion",tabindex:"-1"},R=t("a",{class:"header-anchor",href:"#clone-quaternion","aria-hidden":"true"},"#",-1),M={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.clone",target:"_blank",rel:"noopener noreferrer"},S={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion",target:"_blank",rel:"noopener noreferrer"},H={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.x",target:"_blank",rel:"noopener noreferrer"},L={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.y",target:"_blank",rel:"noopener noreferrer"},D={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.z",target:"_blank",rel:"noopener noreferrer"},P={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.w",target:"_blank",rel:"noopener noreferrer"},U={id:"conjugate-this",tabindex:"-1"},C=t("a",{class:"header-anchor",href:"#conjugate-this","aria-hidden":"true"},"#",-1),W={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.conjugate",target:"_blank",rel:"noopener noreferrer"},X=t("p",null,"返回该四元数的旋转共轭。 四元数的共轭表示的是，围绕旋转轴在相反方向上的相同旋转。",-1),Y={id:"copy-q-quaternion-this",tabindex:"-1"},Z=t("a",{class:"header-anchor",href:"#copy-q-quaternion-this","aria-hidden":"true"},"#",-1),$={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.copy",target:"_blank",rel:"noopener noreferrer"},G={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion",target:"_blank",rel:"noopener noreferrer"},J={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion",target:"_blank",rel:"noopener noreferrer"},K={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.x",target:"_blank",rel:"noopener noreferrer"},ee={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.y",target:"_blank",rel:"noopener noreferrer"},te={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.z",target:"_blank",rel:"noopener noreferrer"},re={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.w",target:"_blank",rel:"noopener noreferrer"},ne={id:"equals-v-quaternion-boolean",tabindex:"-1"},oe=t("a",{class:"header-anchor",href:"#equals-v-quaternion-boolean","aria-hidden":"true"},"#",-1),ae={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.equals",target:"_blank",rel:"noopener noreferrer"},se={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion",target:"_blank",rel:"noopener noreferrer"},he={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion",target:"_blank",rel:"noopener noreferrer"},ie={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion",target:"_blank",rel:"noopener noreferrer"},le={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.x",target:"_blank",rel:"noopener noreferrer"},de={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.y",target:"_blank",rel:"noopener noreferrer"},ce={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.z",target:"_blank",rel:"noopener noreferrer"},pe={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.w",target:"_blank",rel:"noopener noreferrer"},_e={id:"dot-v-quaternion-float",tabindex:"-1"},fe=t("a",{class:"header-anchor",href:"#dot-v-quaternion-float","aria-hidden":"true"},"#",-1),ue={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.dot",target:"_blank",rel:"noopener noreferrer"},me={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion",target:"_blank",rel:"noopener noreferrer"},ge={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion",target:"_blank",rel:"noopener noreferrer"},be={href:"https://en.wikipedia.org/wiki/Dot_product",target:"_blank",rel:"noopener noreferrer"},xe={id:"fromarray-array-array-offset-integer-this",tabindex:"-1"},ke=t("a",{class:"header-anchor",href:"#fromarray-array-array-offset-integer-this","aria-hidden":"true"},"#",-1),ze={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.fromArray",target:"_blank",rel:"noopener noreferrer"},ye=t("p",null,"array - 用于构造四元数的形如(x, y, z, w)的数组。 offset - （可选）数组的偏移量。（译者注：使用数组中从第offset元素算起的四个元素）",-1),Qe={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.x",target:"_blank",rel:"noopener noreferrer"},je={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.y",target:"_blank",rel:"noopener noreferrer"},qe={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.z",target:"_blank",rel:"noopener noreferrer"},we={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.w",target:"_blank",rel:"noopener noreferrer"},ve={id:"identity-this",tabindex:"-1"},Fe=t("a",{class:"header-anchor",href:"#identity-this","aria-hidden":"true"},"#",-1),Ae={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.identity",target:"_blank",rel:"noopener noreferrer"},Ee=t("p",null,"设置该四元数为 identity 四元数，即表示“不旋转”的四元数。",-1),Ve={id:"invert-this",tabindex:"-1"},Te=t("a",{class:"header-anchor",href:"#invert-this","aria-hidden":"true"},"#",-1),Ie={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.invert",target:"_blank",rel:"noopener noreferrer"},Oe={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.conjugate",target:"_blank",rel:"noopener noreferrer"},Be={id:"length-float",tabindex:"-1"},Ne=t("a",{class:"header-anchor",href:"#length-float","aria-hidden":"true"},"#",-1),Re={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.length",target:"_blank",rel:"noopener noreferrer"},Me={href:"https://en.wikipedia.org/wiki/Euclidean_distance",target:"_blank",rel:"noopener noreferrer"},Se={id:"lengthsq-float",tabindex:"-1"},He=t("a",{class:"header-anchor",href:"#lengthsq-float","aria-hidden":"true"},"#",-1),Le={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.lengthSq",target:"_blank",rel:"noopener noreferrer"},De={href:"https://en.wikipedia.org/wiki/Euclidean_distance",target:"_blank",rel:"noopener noreferrer"},Pe={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.length",target:"_blank",rel:"noopener noreferrer"},Ue={id:"normalize-this",tabindex:"-1"},Ce=t("a",{class:"header-anchor",href:"#normalize-this","aria-hidden":"true"},"#",-1),We={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.normalize",target:"_blank",rel:"noopener noreferrer"},Xe={href:"https://en.wikipedia.org/wiki/Normalized_vector",target:"_blank",rel:"noopener noreferrer"},Ye=t("strong",null,"1",-1),Ze={id:"multiply-q-quaternion-this",tabindex:"-1"},$e=t("a",{class:"header-anchor",href:"#multiply-q-quaternion-this","aria-hidden":"true"},"#",-1),Ge={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.multiply",target:"_blank",rel:"noopener noreferrer"},Je={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion",target:"_blank",rel:"noopener noreferrer"},Ke={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion",target:"_blank",rel:"noopener noreferrer"},et={id:"multiplyquaternions-a-quaternion-b-quaternion-this",tabindex:"-1"},tt=t("a",{class:"header-anchor",href:"#multiplyquaternions-a-quaternion-b-quaternion-this","aria-hidden":"true"},"#",-1),rt={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.multiplyQuaternions",target:"_blank",rel:"noopener noreferrer"},nt={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion",target:"_blank",rel:"noopener noreferrer"},ot={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion",target:"_blank",rel:"noopener noreferrer"},at={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion",target:"_blank",rel:"noopener noreferrer"},st={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion",target:"_blank",rel:"noopener noreferrer"},ht={href:"http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm",target:"_blank",rel:"noopener noreferrer"},it={id:"premultiply-q-quaternion-this",tabindex:"-1"},lt=t("a",{class:"header-anchor",href:"#premultiply-q-quaternion-this","aria-hidden":"true"},"#",-1),dt={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.premultiply",target:"_blank",rel:"noopener noreferrer"},ct={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion",target:"_blank",rel:"noopener noreferrer"},pt={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion",target:"_blank",rel:"noopener noreferrer"},_t={id:"rotatetowards-q-quaternion-step-float-this",tabindex:"-1"},ft=t("a",{class:"header-anchor",href:"#rotatetowards-q-quaternion-step-float-this","aria-hidden":"true"},"#",-1),ut={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.rotateTowards",target:"_blank",rel:"noopener noreferrer"},mt={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion",target:"_blank",rel:"noopener noreferrer"},gt={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion",target:"_blank",rel:"noopener noreferrer"},bt=t("p",null,[e("将该四元数按照步长 step 向目标 "),t("strong",null,"q"),e(" 进行旋转。该方法确保最终的四元数不会超过 "),t("strong",null,"q"),e("。")],-1),xt={id:"slerp-qb-quaternion-t-float-this",tabindex:"-1"},kt=t("a",{class:"header-anchor",href:"#slerp-qb-quaternion-t-float-this","aria-hidden":"true"},"#",-1),zt={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.slerp",target:"_blank",rel:"noopener noreferrer"},yt={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion",target:"_blank",rel:"noopener noreferrer"},Qt={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion",target:"_blank",rel:"noopener noreferrer"},jt={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion",target:"_blank",rel:"noopener noreferrer"},qt=t("strong",null,"slerp",-1),wt=t("code",null,"// rotate a mesh towards a target quaternion mesh.quaternion.slerp( endQuaternion, 0.01 );",-1),vt={id:"slerpquaternions-qa-quaternion-qb-quaternion-t-float-this",tabindex:"-1"},Ft=t("a",{class:"header-anchor",href:"#slerpquaternions-qa-quaternion-qb-quaternion-t-float-this","aria-hidden":"true"},"#",-1),At={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.slerpQuaternions",target:"_blank",rel:"noopener noreferrer"},Et={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion",target:"_blank",rel:"noopener noreferrer"},Vt={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion",target:"_blank",rel:"noopener noreferrer"},Tt=t("p",null,"在给定的四元数之间执行球面线性插值，并将结果存储在这个四元数中",-1),It={id:"set-x-float-y-float-z-float-w-float-this",tabindex:"-1"},Ot=t("a",{class:"header-anchor",href:"#set-x-float-y-float-z-float-w-float-this","aria-hidden":"true"},"#",-1),Bt={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.set",target:"_blank",rel:"noopener noreferrer"},Nt={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.x",target:"_blank",rel:"noopener noreferrer"},Rt={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.y",target:"_blank",rel:"noopener noreferrer"},Mt={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.z",target:"_blank",rel:"noopener noreferrer"},St={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.w",target:"_blank",rel:"noopener noreferrer"},Ht={id:"setfromaxisangle-axis-vector3-angle-float-this",tabindex:"-1"},Lt=t("a",{class:"header-anchor",href:"#setfromaxisangle-axis-vector3-angle-float-this","aria-hidden":"true"},"#",-1),Dt={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.setFromAxisAngle",target:"_blank",rel:"noopener noreferrer"},Pt={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},Ut={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},Ct={href:"http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm",target:"_blank",rel:"noopener noreferrer"},Wt=t("strong",null,"Axis",-1),Xt=t("strong",null,"angle",-1),Yt={id:"setfromeuler-euler-euler-this",tabindex:"-1"},Zt=t("a",{class:"header-anchor",href:"#setfromeuler-euler-euler-this","aria-hidden":"true"},"#",-1),$t={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.setFromEuler",target:"_blank",rel:"noopener noreferrer"},Gt={href:"https://threejs.org/docs/index.html#api/zh/math/Euler",target:"_blank",rel:"noopener noreferrer"},Jt={href:"https://threejs.org/docs/index.html#api/zh/math/Euler",target:"_blank",rel:"noopener noreferrer"},Kt={id:"setfromrotationmatrix-m-matrix4-this",tabindex:"-1"},er=t("a",{class:"header-anchor",href:"#setfromrotationmatrix-m-matrix4-this","aria-hidden":"true"},"#",-1),tr={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.setFromRotationMatrix",target:"_blank",rel:"noopener noreferrer"},rr={href:"https://threejs.org/docs/index.html#api/zh/math/Matrix4",target:"_blank",rel:"noopener noreferrer"},nr={href:"https://threejs.org/docs/index.html#api/zh/math/Matrix4",target:"_blank",rel:"noopener noreferrer"},or={href:"http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm",target:"_blank",rel:"noopener noreferrer"},ar={id:"setfromunitvectors-vfrom-vector3-vto-vector3-this",tabindex:"-1"},sr=t("a",{class:"header-anchor",href:"#setfromunitvectors-vfrom-vector3-vto-vector3-this","aria-hidden":"true"},"#",-1),hr={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.setFromUnitVectors",target:"_blank",rel:"noopener noreferrer"},ir={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},lr={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},dr={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},cr={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},pr={href:"http://lolengine.net/blog/2013/09/18/beautiful-maths-quaternion-from-vectors",target:"_blank",rel:"noopener noreferrer"},_r={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},fr={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},ur={id:"toarray-array-array-offset-integer-array",tabindex:"-1"},mr=t("a",{class:"header-anchor",href:"#toarray-array-array-offset-integer-array","aria-hidden":"true"},"#",-1),gr={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.toArray",target:"_blank",rel:"noopener noreferrer"},br=t("p",null,"array - （可选）存储该四元数的数组。若未指定该参数，则将创建一个新数组。 offset - （可选）若指定了该值，结果将会被拷贝到该 Array。",-1),xr=t("p",null,"在形如[x, y, z, w]的数组中，返回四元数中的数字元素。",-1),kr={id:"frombufferattribute-attribute-bufferattribute-index-integer-this",tabindex:"-1"},zr=t("a",{class:"header-anchor",href:"#frombufferattribute-attribute-bufferattribute-index-integer-this","aria-hidden":"true"},"#",-1),yr={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.fromBufferAttribute",target:"_blank",rel:"noopener noreferrer"},Qr={href:"https://threejs.org/docs/index.html#api/zh/core/BufferAttribute",target:"_blank",rel:"noopener noreferrer"},jr={href:"https://threejs.org/docs/index.html#api/zh/core/BufferAttribute",target:"_blank",rel:"noopener noreferrer"},qr={href:"https://threejs.org/docs/index.html#api/zh/core/BufferAttribute",target:"_blank",rel:"noopener noreferrer"},wr={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.x",target:"_blank",rel:"noopener noreferrer"},vr={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.y",target:"_blank",rel:"noopener noreferrer"},Fr={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.z",target:"_blank",rel:"noopener noreferrer"},Ar={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.w",target:"_blank",rel:"noopener noreferrer"},Er=t("h2",{id:"静态方法",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#静态方法","aria-hidden":"true"},"#"),e(" 静态方法")],-1),Vr={id:"slerpflat-dst-array-dstoffset-integer-src0-array-srcoffset0-integer-src1-array-srcoffset1-integer-t-float-undefined",tabindex:"-1"},Tr=t("a",{class:"header-anchor",href:"#slerpflat-dst-array-dstoffset-integer-src0-array-srcoffset0-integer-src1-array-srcoffset1-integer-t-float-undefined","aria-hidden":"true"},"#",-1),Ir={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.slerpFlat",target:"_blank",rel:"noopener noreferrer"},Or=t("p",null,[e("dst - 输出数组 dstOffset - 输出数组的偏移量 src0 - 起始四元数的源数组 srcOffset0 - 数组 "),t("strong",null,"src0"),e(" 的偏移量 src1 - 目标四元数的源数组 srcOffset1 - 数组 "),t("strong",null,"src1"),e(" 的偏移量 t - 归一化插值因子(介于 0 和 1 之间)")],-1),Br=t("p",null,"This SLERP implementation assumes the quaternion data are managed in flat arrays.",-1),Nr={id:"multiplyquaternionsflat-dst-array-dstoffset-integer-src0-array-srcoffset0-integer-src1-array-srcoffset1-integer-array",tabindex:"-1"},Rr=t("a",{class:"header-anchor",href:"#multiplyquaternionsflat-dst-array-dstoffset-integer-src0-array-srcoffset0-integer-src1-array-srcoffset1-integer-array","aria-hidden":"true"},"#",-1),Mr={href:"https://threejs.org/docs/index.html#api/zh/math/Quaternion.multiplyQuaternionsFlat",target:"_blank",rel:"noopener noreferrer"},Sr=t("p",null,[e("dst - The output array. dstOffset - An offset into the output array. src0 - The source array of the starting quaternion. srcOffset0 - An offset into the array "),t("strong",null,"src0"),e(". src1 - The source array of the target quaternion. srcOffset1 - An offset into the array "),t("strong",null,"src1"),e(".")],-1),Hr=t("p",null,"This multiplication implementation assumes the quaternion data are managed in flat arrays.",-1);function Lr(Dr,Pr){const r=i("ExternalLinkIcon");return a(),s("div",null,[d,t("p",null,[e("该类实现了 "),t("a",c,[e("quaternion"),n(r)]),e(" 。 四元数在three.js中用于表示 "),t("a",p,[e("rotation"),n(r)]),e(" （旋转）。")]),_,t("h3",f,[u,e(" ."),t("a",m,[e("isQuaternion"),n(r)]),e(" : Boolean")]),g,t("h3",b,[x,e(" ."),t("a",k,[e("x"),n(r)]),e(" : Float")]),t("h3",z,[y,e(" ."),t("a",Q,[e("y"),n(r)]),e(" : Float")]),t("h3",j,[q,e(" ."),t("a",w,[e("z"),n(r)]),e(" : Float")]),t("h3",v,[F,e(" ."),t("a",A,[e("w"),n(r)]),e(" : Float")]),E,t("h3",V,[T,e(" ."),t("a",I,[e("angleTo"),n(r)]),e(" ( q : "),t("a",O,[e("Quaternion"),n(r)]),e(" ) : Float")]),t("p",null,[e("以弧度返回该四元数与四元数 "),t("a",B,[e("q"),n(r)]),e(" 之间的夹角。")]),t("h3",N,[R,e(" ."),t("a",M,[e("clone"),n(r)]),e(" () : "),t("a",S,[e("Quaternion"),n(r)])]),t("p",null,[e("创建一个与该四元数具有相同"),t("a",H,[e("x"),n(r)]),e("、"),t("a",L,[e("y"),n(r)]),e("、"),t("a",D,[e("z"),n(r)]),e("和"),t("a",P,[e("w"),n(r)]),e(" 属性的四元数。")]),t("h3",U,[C,e(" ."),t("a",W,[e("conjugate"),n(r)]),e(" () : this")]),X,t("h3",Y,[Z,e(" ."),t("a",$,[e("copy"),n(r)]),e(" ( q : "),t("a",G,[e("Quaternion"),n(r)]),e(" ) : this")]),t("p",null,[e("复制四元数 "),t("a",J,[e("q"),n(r)]),e(" 的 "),t("a",K,[e("x"),n(r)]),e("、"),t("a",ee,[e("y"),n(r)]),e("、"),t("a",te,[e("z"),n(r)]),e(" 和 "),t("a",re,[e("w"),n(r)]),e(" 属性到该四元数中。")]),t("h3",ne,[oe,e(" ."),t("a",ae,[e("equals"),n(r)]),e(" ( v : "),t("a",se,[e("Quaternion"),n(r)]),e(" ) : Boolean")]),t("p",null,[t("a",he,[e("v"),n(r)]),e(" - 用于进行比较的四元数。")]),t("p",null,[e("将四元数 "),t("a",ie,[e("v"),n(r)]),e(" 的 "),t("a",le,[e("x"),n(r)]),e("、 "),t("a",de,[e("y"),n(r)]),e("、 "),t("a",ce,[e("z"),n(r)]),e(" 和 "),t("a",pe,[e("w"),n(r)]),e(" 的属性 与当前四元数的对应属性相比较，以确定它们是否表示相同的旋转。")]),t("h3",_e,[fe,e(" ."),t("a",ue,[e("dot"),n(r)]),e(" ( v : "),t("a",me,[e("Quaternion"),n(r)]),e(" ) : Float")]),t("p",null,[e("计算四元数 "),t("a",ge,[e("v"),n(r)]),e(" 与当前四元数的"),t("a",be,[e("dot product"),n(r)]),e("（点积）。")]),t("h3",xe,[ke,e(" ."),t("a",ze,[e("fromArray"),n(r)]),e(" ( array : Array, offset : Integer ) : this")]),ye,t("p",null,[e("从一个数组来设置四元数的 "),t("a",Qe,[e("x"),n(r)]),e("、 "),t("a",je,[e("y"),n(r)]),e("、"),t("a",qe,[e("z"),n(r)]),e(" 和 "),t("a",we,[e("w"),n(r)]),e(" 的属性。")]),t("h3",ve,[Fe,e(" ."),t("a",Ae,[e("identity"),n(r)]),e(" () : this")]),Ee,t("h3",Ve,[Te,e(" ."),t("a",Ie,[e("invert"),n(r)]),e(" () : this")]),t("p",null,[e("翻转该四元数 —— 计算 "),t("a",Oe,[e("conjugate"),n(r)]),e(" 。假定该四元数具有单位长度。")]),t("h3",Be,[Ne,e(" ."),t("a",Re,[e("length"),n(r)]),e(" () : Float")]),t("p",null,[e("计算四元数的 "),t("a",Me,[e("Euclidean length"),n(r)]),e(" （欧几里得长度，直线长度），视为一个四维向量。")]),t("h3",Se,[He,e(" ."),t("a",Le,[e("lengthSq"),n(r)]),e(" () : Float")]),t("p",null,[e("计算四元数 "),t("a",De,[e("Euclidean length"),n(r)]),e(" （欧几里得长度，直线长度）的平方，视为一个四维向量。 如果要比较两个四元数的长度，这可能会十分有用， 因为这比 "),t("a",Pe,[e("length"),n(r)]),e("() 的效率稍高一些。")]),t("h3",Ue,[Ce,e(" ."),t("a",We,[e("normalize"),n(r)]),e(" () : this")]),t("p",null,[t("a",Xe,[e("Normalizes"),n(r)]),e("（归一化）四元数 —— 即计算与该四元数具有相同旋转、但长度为"),Ye,e("的四元数。")]),t("h3",Ze,[$e,e(" ."),t("a",Ge,[e("multiply"),n(r)]),e(" ( q : "),t("a",Je,[e("Quaternion"),n(r)]),e(" ) : this")]),t("p",null,[e("将该四元数与"),t("a",Ke,[e("q"),n(r)]),e("相乘。")]),t("h3",et,[tt,e(" ."),t("a",rt,[e("multiplyQuaternions"),n(r)]),e(" ( a : "),t("a",nt,[e("Quaternion"),n(r)]),e(", b : "),t("a",ot,[e("Quaternion"),n(r)]),e(" ) : this")]),t("p",null,[e("将该四元数设为 "),t("a",at,[e("a"),n(r)]),e(" x "),t("a",st,[e("b"),n(r)]),e(" 。 改编自 "),t("a",ht,[e("here"),n(r)]),e(" 所概述的方法。")]),t("h3",it,[lt,e(" ."),t("a",dt,[e("premultiply"),n(r)]),e(" ( q : "),t("a",ct,[e("Quaternion"),n(r)]),e(" ) : this")]),t("p",null,[e("使用 "),t("a",pt,[e("q"),n(r)]),e(" 乘以该四元数。")]),t("h3",_t,[ft,e(" ."),t("a",ut,[e("rotateTowards"),n(r)]),e(" ( q : "),t("a",mt,[e("Quaternion"),n(r)]),e(", step : Float ) : this")]),t("p",null,[t("a",gt,[e("q"),n(r)]),e(" - 目标四元数 step - 以弧度为单位的角度步长")]),bt,t("h3",xt,[kt,e(" ."),t("a",zt,[e("slerp"),n(r)]),e(" ( qb : "),t("a",yt,[e("Quaternion"),n(r)]),e(", t : Float ) : this")]),t("p",null,[t("a",Qt,[e("qb"),n(r)]),e(" - 另一个四元数旋转 t - 闭区间 [0, 1] 中的插值因子")]),t("p",null,[e("处理四元数之间的球面线性插值。t 表示该四元数(其中 t 为 0) 和 "),t("a",jt,[e("qb"),n(r)]),e(" (其中 t 为1) 之间的旋转量。 该四元数会被设置为上述计算的结果。另请参阅下面 "),qt,e(" 的静态版本。"),wt]),t("h3",vt,[Ft,e(" ."),t("a",At,[e("slerpQuaternions"),n(r)]),e(" ( qa : "),t("a",Et,[e("Quaternion"),n(r)]),e(", qb : "),t("a",Vt,[e("Quaternion"),n(r)]),e(", t : Float ) : this")]),Tt,t("h3",It,[Ot,e(" ."),t("a",Bt,[e("set"),n(r)]),e(" ( x : Float, y : Float, z : Float, w : Float ) : this")]),t("p",null,[e("设置该四元数的 "),t("a",Nt,[e("x"),n(r)]),e("、"),t("a",Rt,[e("y"),n(r)]),e("、"),t("a",Mt,[e("z"),n(r)]),e("和"),t("a",St,[e("w"),n(r)]),e("属性。")]),t("h3",Ht,[Lt,e(" ."),t("a",Dt,[e("setFromAxisAngle"),n(r)]),e(" ( axis : "),t("a",Pt,[e("Vector3"),n(r)]),e(", angle : Float ) : this")]),t("p",null,[e("从由 "),t("a",Ut,[e("axis"),n(r)]),e("（轴） 和 angle（角度）所给定的旋转来设置该四元数。 改编自 "),t("a",Ct,[e("here"),n(r)]),e(" 所述的方法。 假定"),Wt,e("已被归一化，"),Xt,e("以弧度来表示。")]),t("h3",Yt,[Zt,e(" ."),t("a",$t,[e("setFromEuler"),n(r)]),e(" ( euler : "),t("a",Gt,[e("Euler"),n(r)]),e(" ) : this")]),t("p",null,[e("从由 "),t("a",Jt,[e("Euler"),n(r)]),e(" 角所给定的旋转来设置该四元数。")]),t("h3",Kt,[er,e(" ."),t("a",tr,[e("setFromRotationMatrix"),n(r)]),e(" ( m : "),t("a",rr,[e("Matrix4"),n(r)]),e(" ) : this")]),t("p",null,[e("从"),t("a",nr,[e("m"),n(r)]),e("的旋转分量中来设置该四元数。 改编自 "),t("a",or,[e("here"),n(r)]),e(" 所概述的方法。")]),t("h3",ar,[sr,e(" ."),t("a",hr,[e("setFromUnitVectors"),n(r)]),e(" ( vFrom : "),t("a",ir,[e("Vector3"),n(r)]),e(", vTo : "),t("a",lr,[e("Vector3"),n(r)]),e(" ) : this")]),t("p",null,[e("将该四元数设置为从方向向量 "),t("a",dr,[e("vFrom"),n(r)]),e(" 旋转到方向向量 "),t("a",cr,[e("vTo"),n(r)]),e(" 所需的旋转。 改编自方法 "),t("a",pr,[e("here"),n(r)]),e("。 假设 "),t("a",_r,[e("vFrom"),n(r)]),e(" 和 "),t("a",fr,[e("vTo"),n(r)]),e(" 都已归一化。")]),t("h3",ur,[mr,e(" ."),t("a",gr,[e("toArray"),n(r)]),e(" ( array : Array, offset : Integer ) : Array")]),br,xr,t("h3",kr,[zr,e(" ."),t("a",yr,[e("fromBufferAttribute"),n(r)]),e(" ( attribute : "),t("a",Qr,[e("BufferAttribute"),n(r)]),e(", index : Integer ) : this")]),t("p",null,[t("a",jr,[e("attribute"),n(r)]),e(" - 源 attribute。 index - attribute 中的索引。")]),t("p",null,[e("从 "),t("a",qr,[e("attribute"),n(r)]),e(" 中设置该四元数的"),t("a",wr,[e("x"),n(r)]),e("、 "),t("a",vr,[e("y"),n(r)]),e("、 "),t("a",Fr,[e("z"),n(r)]),e("、 "),t("a",Ar,[e("w"),n(r)]),e("属性。")]),Er,t("h3",Vr,[Tr,e(" ."),t("a",Ir,[e("slerpFlat"),n(r)]),e(" ( dst : Array, dstOffset : Integer, src0 : Array, srcOffset0 : Integer, src1 : Array, srcOffset1 : Integer, t : Float ) : undefined")]),Or,Br,t("h3",Nr,[Rr,e(" ."),t("a",Mr,[e("multiplyQuaternionsFlat"),n(r)]),e(" ( dst : Array, dstOffset : Integer, src0 : Array, srcOffset0 : Integer, src1 : Array, srcOffset1 : Integer ) : Array")]),Sr,Hr])}const Cr=o(l,[["render",Lr],["__file","Quaternion.html.vue"]]);export{Cr as default};
