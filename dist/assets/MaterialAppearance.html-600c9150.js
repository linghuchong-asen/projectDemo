import{_ as l,V as s,W as r,Y as e,Z as t,$ as a,X as o,D as c}from"./framework-34e2585c.js";const p={},i=e("h1",{id:"任意几何图形外观-materialappearance",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#任意几何图形外观-materialappearance","aria-hidden":"true"},"#"),t(" 任意几何图形外观(MaterialAppearance)")],-1),d=e("p",null,"支持材质着色的任意几何图形的外观。",-1),u=e("h2",{id:"构造器",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#构造器","aria-hidden":"true"},"#"),t(" 构造器")],-1),_=e("p",null,[e("strong",null,"MaterialAppearance(options)")],-1),h=e("p",null,"options具有以下属性的对象：",-1),m=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"Name"),e("th",{style:{"text-align":"left"}},"Type"),e("th",{style:{"text-align":"left"}},"Default"),e("th",{style:{"text-align":"left"}},"Description")])],-1),f=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"flat")]),e("td",{style:{"text-align":"left"}},"Boolean"),e("td",{style:{"text-align":"left"}},[e("code",null,"false")]),e("td",{style:{"text-align":"left"}},[e("code",null,"optional"),t("当"),e("code",null,"true"),t("时，在片段着色器中使用了平面着色，这意味着没有考虑到光照。")])],-1),g=e("td",{style:{"text-align":"left"}},[e("code",null,"faceForward")],-1),k=e("td",{style:{"text-align":"left"}},"Boolean",-1),v=e("td",{style:{"text-align":"left"}},[e("code",null,"!options.closed")],-1),w={style:{"text-align":"left"}},y=e("code",null,"optional",-1),b=e("code",null,"true",-1),x={href:"https://www.vvpstk.com/public/Cesium/Documentation/WallGeometry.html",target:"_blank",rel:"noopener noreferrer"},M=e("code",null,"WallGeometry",-1),S=e("td",{style:{"text-align":"left"}},[e("code",null,"translucent")],-1),A=e("td",{style:{"text-align":"left"}},"Boolean",-1),D=e("td",{style:{"text-align":"left"}},[e("code",null,"true")],-1),C={style:{"text-align":"left"}},F=e("code",null,"optional",-1),L=e("code",null,"true",-1),B={href:"https://www.vvpstk.com/public/Cesium/Documentation/MaterialAppearance.html#renderState",target:"_blank",rel:"noopener noreferrer"},T=e("code",null,"MaterialAppearance#renderState",-1),G=e("td",{style:{"text-align":"left"}},[e("code",null,"closed")],-1),W=e("td",{style:{"text-align":"left"}},"Boolean",-1),E=e("td",{style:{"text-align":"left"}},[e("code",null,"false")],-1),O={style:{"text-align":"left"}},V=e("code",null,"optional",-1),j=e("code",null,"true",-1),I={href:"https://www.vvpstk.com/public/Cesium/Documentation/MaterialAppearance.html#renderState",target:"_blank",rel:"noopener noreferrer"},N=e("code",null,"MaterialAppearance#renderState",-1),R=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"materialSupport")]),e("td",{style:{"text-align":"left"}},[t("MaterialAppearance."),e("br"),t("MaterialSupport")]),e("td",{style:{"text-align":"left"}},[e("code",null,"MaterialAppearance.<br />MaterialSupport.TEXTURED")]),e("td",{style:{"text-align":"left"}},[e("code",null,"optional"),t("支持的材质类型。")])],-1),X=e("td",{style:{"text-align":"left"}},[e("code",null,"material")],-1),U={style:{"text-align":"left"}},P={href:"https://www.vvpstk.com/public/Cesium/Documentation/Material.html",target:"_blank",rel:"noopener noreferrer"},Y=e("td",{style:{"text-align":"left"}},[e("code",null,"Material.ColorType")],-1),Z=e("td",{style:{"text-align":"left"}},[e("code",null,"optional"),t("用于确定片元颜色的材质。")],-1),$=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"vertexShaderSource")]),e("td",{style:{"text-align":"left"}},"String"),e("td",{style:{"text-align":"left"}}),e("td",{style:{"text-align":"left"}},[e("code",null,"optional"),t("可选的GLSL顶点着色器源覆盖默认的顶点着色器。")])],-1),q=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"fragmentShaderSource")]),e("td",{style:{"text-align":"left"}},"String"),e("td",{style:{"text-align":"left"}}),e("td",{style:{"text-align":"left"}},[e("code",null,"optional"),t("可选的GLSL片段着色器源覆盖默认的片段着色器。")])],-1),z=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"renderState")]),e("td",{style:{"text-align":"left"}},"RenderState"),e("td",{style:{"text-align":"left"}}),e("td",{style:{"text-align":"left"}},[e("code",null,"optional"),t("可选的渲染状态来覆盖默认的渲染状态。")])],-1),H=o(`<h2 id="示例代码" tabindex="-1"><a class="header-anchor" href="#示例代码" aria-hidden="true">#</a> 示例代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> primitive <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Webgis<span class="token punctuation">.</span>Primitive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">geometryInstances</span> <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Webgis<span class="token punctuation">.</span>GeometryInstance</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">geometry</span> <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Webgis<span class="token punctuation">.</span>WallGeometry</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">materialSupport</span> <span class="token operator">:</span>  Webgis<span class="token punctuation">.</span>MaterialAppearance<span class="token punctuation">.</span>MaterialSupport<span class="token punctuation">.</span><span class="token constant">BASIC</span><span class="token punctuation">.</span>vertexFormat<span class="token punctuation">,</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">appearance</span> <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Webgis<span class="token punctuation">.</span>MaterialAppearance</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">material</span> <span class="token operator">:</span> Webgis<span class="token punctuation">.</span>Material<span class="token punctuation">.</span><span class="token function">fromType</span><span class="token punctuation">(</span><span class="token string">&#39;Color&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">faceForward</span> <span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性" aria-hidden="true">#</a> 属性</h2><p><code>readOnly</code> <strong><a href="">closed : Boolean</a></strong></p>`,4),J=e("code",null,"true",-1),K={href:"https://www.vvpstk.com/public/Cesium/Documentation/MaterialAppearance.html#renderState",target:"_blank",rel:"noopener noreferrer"},Q=e("code",null,"MaterialAppearance#renderState",-1),ee=e("p",null,[t("默认值："),e("code",null,"false")],-1),te=e("p",null,[e("code",null,"readOnly"),t(),e("strong",null,[e("a",{href:""},"faceForward : Boolean")])],-1),ne=e("code",null,"true",-1),ae={href:"https://www.vvpstk.com/public/Cesium/Documentation/WallGeometry.html",target:"_blank",rel:"noopener noreferrer"},oe=e("code",null,"WallGeometry",-1),le=o('<p>默认值：<code>true</code></p><p><code>readOnly</code> <strong><a href="">flat : Boolean</a></strong></p><p>当<code>true</code>时，在片段着色器中使用了平面着色，这意味着没有考虑到光照。</p><p>默认值：<code>false</code></p><p><code>readOnly</code> <strong><a href="">fragmentShaderSource : String</a></strong></p>',5),se={href:"https://www.vvpstk.com/public/Cesium/Documentation/MaterialAppearance.html#material",target:"_blank",rel:"noopener noreferrer"},re=e("code",null,"MaterialAppearance#material",-1),ce={href:"https://www.vvpstk.com/public/Cesium/Documentation/MaterialAppearance.html#flat",target:"_blank",rel:"noopener noreferrer"},pe=e("code",null,"MaterialAppearance#flat",-1),ie={href:"https://www.vvpstk.com/public/Cesium/Documentation/MaterialAppearance.html#faceForward",target:"_blank",rel:"noopener noreferrer"},de=e("code",null,"MaterialAppearance#faceForward",-1),ue={href:"https://www.vvpstk.com/public/Cesium/Documentation/MaterialAppearance.html#getFragmentShaderSource",target:"_blank",rel:"noopener noreferrer"},_e=e("code",null,"MaterialAppearance#getFragmentShaderSource",-1),he=e("p",null,[e("strong",null,[e("a",{href:""},"material : Material")])],-1),me={href:"https://www.vvpstk.com/public/Cesium/Documentation/MaterialAppearance.html",target:"_blank",rel:"noopener noreferrer"},fe=e("code",null,"MaterialAppearance",-1),ge=e("p",null,[t("默认值："),e("code",null,"Material.ColorType")],-1),ke=e("p",null,[e("code",null,"readOnly"),t(),e("strong",null,[e("a",{href:""},"materialSupport : MaterialAppearance.MaterialSupport")])],-1),ve={href:"https://www.vvpstk.com/public/Cesium/Documentation/VertexFormat.html",target:"_blank",rel:"noopener noreferrer"},we=e("code",null,"VertexFormat",-1),ye=e("p",null,[t("默认值："),e("code",null,"MaterialAppearance.MaterialSupport.TEXTURED")],-1),be=e("p",null,[e("code",null,"readOnly"),t(),e("strong",null,[e("a",{href:""},"renderState : Object")])],-1),xe=e("p",null,"渲染几何图形时的WEBGL状态。",-1),Me={href:"https://www.vvpstk.com/public/Cesium/Documentation/MaterialAppearance.html",target:"_blank",rel:"noopener noreferrer"},Se=e("code",null,"MaterialAppearance",-1),Ae=e("code",null,"MaterialAppearance#半透明",-1),De={href:"https://www.vvpstk.com/public/Cesium/Documentation/MaterialAppearance.html#closed",target:"_blank",rel:"noopener noreferrer"},Ce=e("code",null,"MaterialAppearance#closed",-1),Fe=o('<p><strong><a href="">translucent : Boolean</a></strong></p><p>当<code>true</code>时，几何图形应该是半透明的。</p><p>默认值：<code>true</code></p><p><code>readOnly</code> <strong><a href="">vertexFormat : VertexFormat</a></strong></p>',4),Le={href:"https://www.vvpstk.com/public/Cesium/Documentation/VertexFormat.html",target:"_blank",rel:"noopener noreferrer"},Be=e("code",null,"VertexFormat",-1),Te=o('<p>默认值：<code>MaterialAppearance.MaterialSupport.TEXTURED.vertexFormat</code></p><p><code>readOnly</code> <strong><a href="">vertexShaderSource : String</a></strong></p><p>顶点着色器的GLSL源代码。</p><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h2><p><strong><a href="">getFragmentShaderSource(): String</a></strong></p>',5),Ge={href:"https://www.vvpstk.com/public/Cesium/Documentation/MaterialAppearance.html",target:"_blank",rel:"noopener noreferrer"},We=e("code",null,"MaterialAppearance",-1),Ee={href:"https://www.vvpstk.com/public/Cesium/Documentation/MaterialAppearance.html#fragmentShaderSource",target:"_blank",rel:"noopener noreferrer"},Oe=e("code",null,"MaterialAppearance#fragmentShaderSource",-1),Ve={href:"https://www.vvpstk.com/public/Cesium/Documentation/MaterialAppearance.html#material",target:"_blank",rel:"noopener noreferrer"},je=e("code",null,"MaterialAppearance#material",-1),Ie={href:"https://www.vvpstk.com/public/Cesium/Documentation/MaterialAppearance.html#flat",target:"_blank",rel:"noopener noreferrer"},Ne=e("code",null,"MaterialAppearance#flat",-1),Re={href:"https://www.vvpstk.com/public/Cesium/Documentation/MaterialAppearance.html#faceForward",target:"_blank",rel:"noopener noreferrer"},Xe=e("code",null,"MaterialAppearance#faceForward",-1),Ue=e("p",null,"返回值：完整的GLSL片段着色器。",-1),Pe=e("p",null,[e("strong",null,[e("a",{href:""},"getRenderState(): Object")])],-1),Ye=e("p",null,"获取渲染状态。 这不是最终的渲染状态实例；相反，它可以包含与上下文中创建的呈现状态相同的渲染状态属性的子集。",-1),Ze=e("p",null,"返回值：渲染状态。",-1),$e=e("p",null,[e("strong",null,[e("a",{href:""},"isTranslucent() → Boolean")])],-1),qe={href:"https://www.vvpstk.com/public/Cesium/Documentation/MaterialAppearance.html#translucent",target:"_blank",rel:"noopener noreferrer"},ze=e("code",null,"MaterialAppearance#translucent",-1),He={href:"https://www.vvpstk.com/public/Cesium/Documentation/Material.html#isTranslucent",target:"_blank",rel:"noopener noreferrer"},Je=e("code",null,"Material#isTranslucent",-1),Ke=e("p",null,[t("返回值：如果外观是半透明的"),e("code",null,"true"),t("。")],-1);function Qe(et,tt){const n=c("ExternalLinkIcon");return s(),r("div",null,[i,d,u,_,h,e("table",null,[m,e("tbody",null,[f,e("tr",null,[g,k,v,e("td",w,[y,t("当 "),b,t("时，片段着色器会根据需要翻转表面法线， 以确保法线面对观察者，避免出现黑斑。当几何图形的两侧都应像"),e("a",x,[M,a(n)]),t(" 一样着色时，这很有用。")])]),e("tr",null,[S,A,D,e("td",C,[F,t("当"),L,t("时，几何图形应该是半透明的，因此"),e("a",B,[T,a(n)]),t("启用了alpha混合。")])]),e("tr",null,[G,W,E,e("td",O,[V,t("当"),j,t("时，几何图形将被关闭，因此"),e("a",I,[N,a(n)]),t("启用了背面剔除。")])]),R,e("tr",null,[X,e("td",U,[e("a",P,[t("Material"),a(n)])]),Y,Z]),$,q,z])]),H,e("p",null,[t("当"),J,t("时，几何图形将被关闭，因此"),e("a",K,[Q,a(n)]),t("启用了后表面剔除。")]),ee,te,e("p",null,[t("当 "),ne,t("时，片段着色器会根据需要翻转表面法线， 以确保法线面对观察者，避免出现黑斑。当几何图形的两侧都应像"),e("a",ae,[oe,a(n)]),t(" 一样着色时，这很有用。")]),le,e("p",null,[t("片段着色器的GLSL源代码。 完整的片段着色器源是根据"),e("a",se,[re,a(n)]),t("、"),e("a",ce,[pe,a(n)]),t("和"),e("a",ie,[de,a(n)]),t("构建的。 使用"),e("a",ue,[_e,a(n)]),t("获得完整的源代码。")]),he,e("p",null,[t("用于确定片元颜色的材质。与其他"),e("a",me,[fe,a(n)]),t("属性不同，它不是只读的，所以外观的材质可以动态改变。")]),ge,ke,e("p",null,[t("此实例支持的材质类型。 这影响了所需的"),e("a",ve,[we,a(n)]),t("和顶点、片段着色器的复杂性。")]),ye,be,xe,e("p",null,[t("可以在构造"),e("a",Me,[Se,a(n)]),t("实例时显式定义渲染状态， 也可以通过"),Ae,t("和"),e("a",De,[Ce,a(n)]),t("隐式设置渲染状态。")]),Fe,e("p",null,[t("与此外观实例兼容的"),e("a",Le,[Be,a(n)]),t("。 几何图形可以有更多的顶点属性，而且仍然是兼容的——以潜在的性能成本为代价——但它不能有更少的顶点属性。")]),Te,e("p",null,[t("创建完整的GLSL片段着色源。对于"),e("a",Ge,[We,a(n)]),t("，这是从"),e("a",Ee,[Oe,a(n)]),t("、"),e("a",Ve,[je,a(n)]),t("、"),e("a",Ie,[Ne,a(n)]),t("、"),e("a",Re,[Xe,a(n)]),t("派生出来的。")]),Ue,Pe,Ye,Ze,$e,e("p",null,[t("根据"),e("a",qe,[ze,a(n)]),t("和"),e("a",He,[Je,a(n)]),t("确定几何图形是否为半透明。")]),Ke])}const at=l(p,[["render",Qe],["__file","MaterialAppearance.html.vue"]]);export{at as default};
