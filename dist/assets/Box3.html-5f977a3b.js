import{_ as n,V as h,W as a,Y as t,Z as e,$ as o,X as s,D as i}from"./framework-34e2585c.js";const c={},d=s(`<h1 id="box3" tabindex="-1"><a class="header-anchor" href="#box3" aria-hidden="true">#</a> Box3</h1><p>表示三维空间中的一个轴对齐包围盒（axis-aligned bounding box，AABB）。</p><h2 id="代码示例" tabindex="-1"><a class="header-anchor" href="#代码示例" aria-hidden="true">#</a> 代码示例</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> box <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Box3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">const</span> mesh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>SphereGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshBasicMaterial</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ensure the bounding box is computed for its geometry // this should be done only once (assuming static geometries) mesh.geometry.computeBoundingBox(); // ... // in the animation loop, compute the current bounding box with the world matrix box.copy( mesh.geometry.boundingBox ).applyMatrix4( mesh.matrixWorld );</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="构造器-constructor" tabindex="-1"><a class="header-anchor" href="#构造器-constructor" aria-hidden="true">#</a> 构造器（Constructor）</h2>`,5),l={id:"box3-min-vector3-max-vector3",tabindex:"-1"},p=t("a",{class:"header-anchor",href:"#box3-min-vector3-max-vector3","aria-hidden":"true"},"#",-1),_={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},m={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},f={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},x={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},g={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},b={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},u=t("p",null,"创建一个以max和min为边界的包围盒。",-1),k=t("h2",{id:"属性-properties",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#属性-properties","aria-hidden":"true"},"#"),e(" 属性（Properties）")],-1),j={id:"isbox3-boolean",tabindex:"-1"},z=t("a",{class:"header-anchor",href:"#isbox3-boolean","aria-hidden":"true"},"#",-1),B={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.isBox3",target:"_blank",rel:"noopener noreferrer"},V=t("p",null,"Read-only flag to check if a given object is of type Box3.",-1),y={id:"min-vector3",tabindex:"-1"},v=t("a",{class:"header-anchor",href:"#min-vector3","aria-hidden":"true"},"#",-1),S={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.min",target:"_blank",rel:"noopener noreferrer"},P={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},O={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},D={id:"max-vector3",tabindex:"-1"},E=t("a",{class:"header-anchor",href:"#max-vector3","aria-hidden":"true"},"#",-1),T={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.max",target:"_blank",rel:"noopener noreferrer"},w={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},A={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},I=t("h2",{id:"方法-methods",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#方法-methods","aria-hidden":"true"},"#"),e(" 方法（Methods）")],-1),F={id:"applymatrix4-matrix-matrix4-this",tabindex:"-1"},M=t("a",{class:"header-anchor",href:"#applymatrix4-matrix-matrix4-this","aria-hidden":"true"},"#",-1),C={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.applyMatrix4",target:"_blank",rel:"noopener noreferrer"},R={href:"https://threejs.org/docs/index.html#api/zh/math/Matrix4",target:"_blank",rel:"noopener noreferrer"},q={href:"https://threejs.org/docs/index.html#api/zh/math/Matrix4",target:"_blank",rel:"noopener noreferrer"},H={href:"https://threejs.org/docs/index.html#api/zh/math/Matrix4",target:"_blank",rel:"noopener noreferrer"},N=t("p",null,"使用传入的矩阵变换Box3（包围盒8个顶点都会乘以这个变换矩阵）。",-1),L={id:"clamppoint-point-vector3-target-vector3-vector3",tabindex:"-1"},W=t("a",{class:"header-anchor",href:"#clamppoint-point-vector3-target-vector3-vector3","aria-hidden":"true"},"#",-1),G={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.clampPoint",target:"_blank",rel:"noopener noreferrer"},X={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},Z={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},$={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},J={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},K={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},U={href:"https://en.wikipedia.org/wiki/Clamping_(graphics)",target:"_blank",rel:"noopener noreferrer"},ee={id:"clone-box3",tabindex:"-1"},te=t("a",{class:"header-anchor",href:"#clone-box3","aria-hidden":"true"},"#",-1),re={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.clone",target:"_blank",rel:"noopener noreferrer"},oe={href:"https://threejs.org/docs/index.html#api/zh/math/Box3",target:"_blank",rel:"noopener noreferrer"},ne={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.min",target:"_blank",rel:"noopener noreferrer"},he={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.max",target:"_blank",rel:"noopener noreferrer"},ae={id:"containsbox-box-box3-boolean",tabindex:"-1"},se=t("a",{class:"header-anchor",href:"#containsbox-box-box3-boolean","aria-hidden":"true"},"#",-1),ie={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.containsBox",target:"_blank",rel:"noopener noreferrer"},ce={href:"https://threejs.org/docs/index.html#api/zh/math/Box3",target:"_blank",rel:"noopener noreferrer"},de={href:"https://threejs.org/docs/index.html#api/zh/math/Box3",target:"_blank",rel:"noopener noreferrer"},le={href:"https://threejs.org/docs/index.html#api/zh/math/Box3",target:"_blank",rel:"noopener noreferrer"},pe={href:"https://threejs.org/docs/index.html#api/zh/math/Box3",target:"_blank",rel:"noopener noreferrer"},_e={id:"containspoint-point-vector3-boolean",tabindex:"-1"},me=t("a",{class:"header-anchor",href:"#containspoint-point-vector3-boolean","aria-hidden":"true"},"#",-1),fe={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.containsPoint",target:"_blank",rel:"noopener noreferrer"},xe={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},ge={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},be={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},ue={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},ke={id:"copy-box-box3-this",tabindex:"-1"},je=t("a",{class:"header-anchor",href:"#copy-box-box3-this","aria-hidden":"true"},"#",-1),ze={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.copy",target:"_blank",rel:"noopener noreferrer"},Be={href:"https://threejs.org/docs/index.html#api/zh/math/Box3",target:"_blank",rel:"noopener noreferrer"},Ve={href:"https://threejs.org/docs/index.html#api/zh/math/Box3",target:"_blank",rel:"noopener noreferrer"},ye={href:"https://threejs.org/docs/index.html#api/zh/math/Box3",target:"_blank",rel:"noopener noreferrer"},ve={href:"https://threejs.org/docs/index.html#api/zh/math/Box3",target:"_blank",rel:"noopener noreferrer"},Se={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.min",target:"_blank",rel:"noopener noreferrer"},Pe={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.max",target:"_blank",rel:"noopener noreferrer"},Oe={id:"distancetopoint-point-vector3-float",tabindex:"-1"},De=t("a",{class:"header-anchor",href:"#distancetopoint-point-vector3-float","aria-hidden":"true"},"#",-1),Ee={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.distanceToPoint",target:"_blank",rel:"noopener noreferrer"},Te={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},we={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},Ae={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},Ie=t("p",null,"返回这个box的任何边缘到指定点的距离。如果这个点位于这个盒子里，距离将是0。",-1),Fe={id:"equals-box-box3-boolean",tabindex:"-1"},Me=t("a",{class:"header-anchor",href:"#equals-box-box3-boolean","aria-hidden":"true"},"#",-1),Ce={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.equals",target:"_blank",rel:"noopener noreferrer"},Re={href:"https://threejs.org/docs/index.html#api/zh/math/Box3",target:"_blank",rel:"noopener noreferrer"},qe={href:"https://threejs.org/docs/index.html#api/zh/math/Box3",target:"_blank",rel:"noopener noreferrer"},He={href:"https://threejs.org/docs/index.html#api/zh/math/Box3",target:"_blank",rel:"noopener noreferrer"},Ne={id:"expandbyobject-object-object3d-this",tabindex:"-1"},Le=t("a",{class:"header-anchor",href:"#expandbyobject-object-object3d-this","aria-hidden":"true"},"#",-1),We={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.expandByObject",target:"_blank",rel:"noopener noreferrer"},Ge={href:"https://threejs.org/docs/index.html#api/zh/core/Object3D",target:"_blank",rel:"noopener noreferrer"},Xe={href:"https://threejs.org/docs/index.html#api/zh/core/Object3D",target:"_blank",rel:"noopener noreferrer"},Ye={href:"https://threejs.org/docs/index.html#api/zh/core/Object3D",target:"_blank",rel:"noopener noreferrer"},Ze=t("p",null,"扩展此包围盒的边界，使得对象及其子对象在包围盒内，包括对象和子对象的世界坐标的变换。 该方法可能会导致一个比严格需要的更大的框。",-1),$e={id:"expandbypoint-point-vector3-this",tabindex:"-1"},Je=t("a",{class:"header-anchor",href:"#expandbypoint-point-vector3-this","aria-hidden":"true"},"#",-1),Ke={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.expandByPoint",target:"_blank",rel:"noopener noreferrer"},Qe={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},Ue={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},et={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},tt={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},rt={id:"expandbyscalar-scalar-float-this",tabindex:"-1"},ot=t("a",{class:"header-anchor",href:"#expandbyscalar-scalar-float-this","aria-hidden":"true"},"#",-1),nt={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.expandByScalar",target:"_blank",rel:"noopener noreferrer"},ht=t("p",null,"scalar - 扩展包围盒的比例。",-1),at=t("p",null,"按 scalar 的值展开盒子的每个维度。如果是负数，盒子的尺寸会缩小。",-1),st={id:"expandbyvector-vector-vector3-this",tabindex:"-1"},it=t("a",{class:"header-anchor",href:"#expandbyvector-vector-vector3-this","aria-hidden":"true"},"#",-1),ct={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.expandByVector",target:"_blank",rel:"noopener noreferrer"},dt={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},lt={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},pt={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},_t={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},mt={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},ft={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},xt={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},gt={id:"getboundingsphere-target-sphere-sphere",tabindex:"-1"},bt=t("a",{class:"header-anchor",href:"#getboundingsphere-target-sphere-sphere","aria-hidden":"true"},"#",-1),ut={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.getBoundingSphere",target:"_blank",rel:"noopener noreferrer"},kt={href:"https://threejs.org/docs/index.html#api/zh/math/Sphere",target:"_blank",rel:"noopener noreferrer"},jt={href:"https://threejs.org/docs/index.html#api/zh/math/Sphere",target:"_blank",rel:"noopener noreferrer"},zt={href:"https://threejs.org/docs/index.html#api/zh/math/Sphere",target:"_blank",rel:"noopener noreferrer"},Bt={href:"https://threejs.org/docs/index.html#api/zh/math/Sphere",target:"_blank",rel:"noopener noreferrer"},Vt={id:"getcenter-target-vector3-vector3",tabindex:"-1"},yt=t("a",{class:"header-anchor",href:"#getcenter-target-vector3-vector3","aria-hidden":"true"},"#",-1),vt={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.getCenter",target:"_blank",rel:"noopener noreferrer"},St={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},Pt={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},Ot={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},Dt={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},Et={id:"getparameter-point-vector3-target-vector3-vector3",tabindex:"-1"},Tt=t("a",{class:"header-anchor",href:"#getparameter-point-vector3-target-vector3-vector3","aria-hidden":"true"},"#",-1),wt={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.getParameter",target:"_blank",rel:"noopener noreferrer"},At={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},It={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},Ft={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},Mt={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},Ct={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},Rt={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},qt=t("p",null,"返回一个点为这个盒子的宽度、高度和深度的比例。",-1),Ht={id:"getsize-target-vector3-vector3",tabindex:"-1"},Nt=t("a",{class:"header-anchor",href:"#getsize-target-vector3-vector3","aria-hidden":"true"},"#",-1),Lt={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.getSize",target:"_blank",rel:"noopener noreferrer"},Wt={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},Gt={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},Xt={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},Yt=t("p",null,"返回包围盒的宽度，高度，和深度。",-1),Zt={id:"intersect-box-box3-this",tabindex:"-1"},$t=t("a",{class:"header-anchor",href:"#intersect-box-box3-this","aria-hidden":"true"},"#",-1),Jt={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.intersect",target:"_blank",rel:"noopener noreferrer"},Kt={href:"https://threejs.org/docs/index.html#api/zh/math/Box3",target:"_blank",rel:"noopener noreferrer"},Qt={href:"https://threejs.org/docs/index.html#api/zh/math/Box3",target:"_blank",rel:"noopener noreferrer"},Ut={href:"https://threejs.org/docs/index.html#api/zh/math/Box3",target:"_blank",rel:"noopener noreferrer"},er={id:"intersectsbox-box-box3-boolean",tabindex:"-1"},tr=t("a",{class:"header-anchor",href:"#intersectsbox-box-box3-boolean","aria-hidden":"true"},"#",-1),rr={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.intersectsBox",target:"_blank",rel:"noopener noreferrer"},or={href:"https://threejs.org/docs/index.html#api/zh/math/Box3",target:"_blank",rel:"noopener noreferrer"},nr={href:"https://threejs.org/docs/index.html#api/zh/math/Box3",target:"_blank",rel:"noopener noreferrer"},hr={href:"https://threejs.org/docs/index.html#api/zh/math/Box3",target:"_blank",rel:"noopener noreferrer"},ar={id:"intersectsplane-plane-plane-boolean",tabindex:"-1"},sr=t("a",{class:"header-anchor",href:"#intersectsplane-plane-plane-boolean","aria-hidden":"true"},"#",-1),ir={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.intersectsPlane",target:"_blank",rel:"noopener noreferrer"},cr={href:"https://threejs.org/docs/index.html#api/zh/math/Plane",target:"_blank",rel:"noopener noreferrer"},dr={href:"https://threejs.org/docs/index.html#api/zh/math/Plane",target:"_blank",rel:"noopener noreferrer"},lr={href:"https://threejs.org/docs/index.html#api/zh/math/Plane",target:"_blank",rel:"noopener noreferrer"},pr={href:"https://threejs.org/docs/index.html#api/zh/math/Plane",target:"_blank",rel:"noopener noreferrer"},_r={id:"intersectssphere-sphere-sphere-boolean",tabindex:"-1"},mr=t("a",{class:"header-anchor",href:"#intersectssphere-sphere-sphere-boolean","aria-hidden":"true"},"#",-1),fr={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.intersectsSphere",target:"_blank",rel:"noopener noreferrer"},xr={href:"https://threejs.org/docs/index.html#api/zh/math/Sphere",target:"_blank",rel:"noopener noreferrer"},gr={href:"https://threejs.org/docs/index.html#api/zh/math/Sphere",target:"_blank",rel:"noopener noreferrer"},br={href:"https://threejs.org/docs/index.html#api/zh/math/Sphere",target:"_blank",rel:"noopener noreferrer"},ur={href:"https://threejs.org/docs/index.html#api/zh/math/Sphere",target:"_blank",rel:"noopener noreferrer"},kr={id:"intersectstriangle-triangle-triangle-boolean",tabindex:"-1"},jr=t("a",{class:"header-anchor",href:"#intersectstriangle-triangle-triangle-boolean","aria-hidden":"true"},"#",-1),zr={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.intersectsTriangle",target:"_blank",rel:"noopener noreferrer"},Br={href:"https://threejs.org/docs/index.html#api/zh/math/Triangle",target:"_blank",rel:"noopener noreferrer"},Vr={href:"https://threejs.org/docs/index.html#api/zh/math/Triangle",target:"_blank",rel:"noopener noreferrer"},yr={href:"https://threejs.org/docs/index.html#api/zh/math/Triangle",target:"_blank",rel:"noopener noreferrer"},vr={href:"https://threejs.org/docs/index.html#api/zh/math/Triangle",target:"_blank",rel:"noopener noreferrer"},Sr={id:"isempty-boolean",tabindex:"-1"},Pr=t("a",{class:"header-anchor",href:"#isempty-boolean","aria-hidden":"true"},"#",-1),Or={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.isEmpty",target:"_blank",rel:"noopener noreferrer"},Dr=t("p",null,"如果这个盒子包含0个顶点，则返回true。 注意，下界和上界相等的方框仍然包含一个点，即两个边界共享的那个点。",-1),Er={id:"makeempty-this",tabindex:"-1"},Tr=t("a",{class:"header-anchor",href:"#makeempty-this","aria-hidden":"true"},"#",-1),wr={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.makeEmpty",target:"_blank",rel:"noopener noreferrer"},Ar=t("p",null,"清空包围盒。",-1),Ir={id:"set-min-vector3-max-vector3-this",tabindex:"-1"},Fr=t("a",{class:"header-anchor",href:"#set-min-vector3-max-vector3-this","aria-hidden":"true"},"#",-1),Mr={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.set",target:"_blank",rel:"noopener noreferrer"},Cr={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},Rr={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},qr={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},Hr={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},Nr={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},Lr={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},Wr=t("p",null,"设置包围盒上下边界每个纬度（x,y,z)的值。 请注意，此方法仅复制给定对象的值。",-1),Gr={id:"setfromarray-array-array-this",tabindex:"-1"},Xr=t("a",{class:"header-anchor",href:"#setfromarray-array-array-this","aria-hidden":"true"},"#",-1),Yr={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.setFromArray",target:"_blank",rel:"noopener noreferrer"},Zr=t("p",null,"array - 数组当中的所有的点都将被包围盒包裹。",-1),$r=t("p",null,[e("设置包围盒的上下边界使得数组 "),t("strong",null,"array"),e(" 中的所有点的点都被包含在内。")],-1),Jr={id:"setfrombufferattribute-attribute-bufferattribute-this",tabindex:"-1"},Kr=t("a",{class:"header-anchor",href:"#setfrombufferattribute-attribute-bufferattribute-this","aria-hidden":"true"},"#",-1),Qr={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.setFromBufferAttribute",target:"_blank",rel:"noopener noreferrer"},Ur={href:"https://threejs.org/docs/index.html#api/zh/core/BufferAttribute",target:"_blank",rel:"noopener noreferrer"},eo={href:"https://threejs.org/docs/index.html#api/zh/core/BufferAttribute",target:"_blank",rel:"noopener noreferrer"},to={href:"https://threejs.org/docs/index.html#api/zh/core/BufferAttribute",target:"_blank",rel:"noopener noreferrer"},ro={id:"setfromcenterandsize-center-vector3-size-vector3-this",tabindex:"-1"},oo=t("a",{class:"header-anchor",href:"#setfromcenterandsize-center-vector3-size-vector3-this","aria-hidden":"true"},"#",-1),no={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.setFromCenterAndSize",target:"_blank",rel:"noopener noreferrer"},ho={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},ao={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},so={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},io={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},co={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},lo={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},po={id:"setfromobject-object-object3d-this",tabindex:"-1"},_o=t("a",{class:"header-anchor",href:"#setfromobject-object-object3d-this","aria-hidden":"true"},"#",-1),mo={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.setFromObject",target:"_blank",rel:"noopener noreferrer"},fo={href:"https://threejs.org/docs/index.html#api/zh/core/Object3D",target:"_blank",rel:"noopener noreferrer"},xo={href:"https://threejs.org/docs/index.html#api/zh/core/Object3D",target:"_blank",rel:"noopener noreferrer"},go={href:"https://threejs.org/docs/index.html#api/zh/core/Object3D",target:"_blank",rel:"noopener noreferrer"},bo={href:"https://threejs.org/docs/index.html#api/zh/core/Object3D",target:"_blank",rel:"noopener noreferrer"},uo={id:"setfrompoints-points-array-this",tabindex:"-1"},ko=t("a",{class:"header-anchor",href:"#setfrompoints-points-array-this","aria-hidden":"true"},"#",-1),jo={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.setFromPoints",target:"_blank",rel:"noopener noreferrer"},zo={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},Bo=t("p",null,"设置此包围盒的上边界和下边界，以包含数组 points 中的所有点。",-1),Vo={id:"translate-offset-vector3-this",tabindex:"-1"},yo=t("a",{class:"header-anchor",href:"#translate-offset-vector3-this","aria-hidden":"true"},"#",-1),vo={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.translate",target:"_blank",rel:"noopener noreferrer"},So={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},Po={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},Oo={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},Do={href:"https://threejs.org/docs/index.html#api/zh/math/Vector3",target:"_blank",rel:"noopener noreferrer"},Eo={id:"union-box-box3-this",tabindex:"-1"},To=t("a",{class:"header-anchor",href:"#union-box-box3-this","aria-hidden":"true"},"#",-1),wo={href:"https://threejs.org/docs/index.html#api/zh/math/Box3.union",target:"_blank",rel:"noopener noreferrer"},Ao={href:"https://threejs.org/docs/index.html#api/zh/math/Box3",target:"_blank",rel:"noopener noreferrer"},Io={href:"https://threejs.org/docs/index.html#api/zh/math/Box3",target:"_blank",rel:"noopener noreferrer"},Fo={href:"https://threejs.org/docs/index.html#api/zh/math/Box3",target:"_blank",rel:"noopener noreferrer"};function Mo(Co,Ro){const r=i("ExternalLinkIcon");return h(),a("div",null,[d,t("h3",l,[p,e(" Box3( min : "),t("a",_,[e("Vector3"),o(r)]),e(", max : "),t("a",m,[e("Vector3"),o(r)]),e(" )")]),t("p",null,[t("a",f,[e("min"),o(r)]),e(" - (参数可选) "),t("a",x,[e("Vector3"),o(r)]),e(" 表示包围盒的下边界。 默认值是（ + Infinity, + Infinity, + Infinity ）。 "),t("a",g,[e("max"),o(r)]),e(" - (参数可选) "),t("a",b,[e("Vector3"),o(r)]),e(" 表示包围盒的上边界。 默认值是（ - Infinity, - Infinity, - Infinity ）。")]),u,k,t("h3",j,[z,e(" ."),t("a",B,[e("isBox3"),o(r)]),e(" : Boolean")]),V,t("h3",y,[v,e(" ."),t("a",S,[e("min"),o(r)]),e(" : "),t("a",P,[e("Vector3"),o(r)])]),t("p",null,[t("a",O,[e("Vector3"),o(r)]),e(" 表示包围盒的下边界。 默认值是（ + Infinity, + Infinity, + Infinity ）。")]),t("h3",D,[E,e(" ."),t("a",T,[e("max"),o(r)]),e(" : "),t("a",w,[e("Vector3"),o(r)])]),t("p",null,[t("a",A,[e("Vector3"),o(r)]),e(" 包围盒的(x, y, z)上边界。 默认值是 ( - Infinity, - Infinity, - Infinity ).")]),I,t("h3",F,[M,e(" ."),t("a",C,[e("applyMatrix4"),o(r)]),e(" ( matrix : "),t("a",R,[e("Matrix4"),o(r)]),e(" ) : this")]),t("p",null,[t("a",q,[e("matrix"),o(r)]),e(" - 要应用的 "),t("a",H,[e("Matrix4"),o(r)])]),N,t("h3",L,[W,e(" ."),t("a",G,[e("clampPoint"),o(r)]),e(" ( point : "),t("a",X,[e("Vector3"),o(r)]),e(", target : "),t("a",Y,[e("Vector3"),o(r)]),e(" ) : "),t("a",Z,[e("Vector3"),o(r)])]),t("p",null,[t("a",$,[e("point"),o(r)]),e(" - 需要做clamp 的坐标 "),t("a",J,[e("Vector3"),o(r)]),e("。 "),t("a",K,[e("target"),o(r)]),e(" — 结果将会被拷贝到这个对象中")]),t("p",null,[e("使这个点"),t("a",Q,[e("point"),o(r)]),e(),t("a",U,[e("Clamps"),o(r)]),e("(处于范围内) 处于包围盒边界范围内。")]),t("h3",ee,[te,e(" ."),t("a",re,[e("clone"),o(r)]),e(" () : "),t("a",oe,[e("Box3"),o(r)])]),t("p",null,[e("返回一个与该包围盒子有相同下边界"),t("a",ne,[e("min"),o(r)]),e(" 和上边界 "),t("a",he,[e("max"),o(r)]),e("的新包围盒。")]),t("h3",ae,[se,e(" ."),t("a",ie,[e("containsBox"),o(r)]),e(" ( box : "),t("a",ce,[e("Box3"),o(r)]),e(" ) : Boolean")]),t("p",null,[t("a",de,[e("box"),o(r)]),e(" - 需要检测是否在当前包围盒内的 "),t("a",le,[e("Box3"),o(r)]),e("。")]),t("p",null,[e("传入的 "),t("a",pe,[e("box"),o(r)]),e(" 整体都被包含在该对象中则返回true。如果他们两个包围盒是一样的也返回true。")]),t("h3",_e,[me,e(" ."),t("a",fe,[e("containsPoint"),o(r)]),e(" ( point : "),t("a",xe,[e("Vector3"),o(r)]),e(" ) : Boolean")]),t("p",null,[t("a",ge,[e("point"),o(r)]),e(" - 需要检测是否在当前包围盒内的 "),t("a",be,[e("Vector3"),o(r)]),e("。")]),t("p",null,[e("当传入的值 "),t("a",ue,[e("point"),o(r)]),e(" 在包围盒内部或者边界都会返回true。")]),t("h3",ke,[je,e(" ."),t("a",ze,[e("copy"),o(r)]),e(" ( box : "),t("a",Be,[e("Box3"),o(r)]),e(" ) : this")]),t("p",null,[t("a",Ve,[e("box"),o(r)]),e(" - 需要复制的包围盒 "),t("a",ye,[e("Box3"),o(r)]),e(" 。")]),t("p",null,[e("将传入的值 "),t("a",ve,[e("box"),o(r)]),e(" 中的 "),t("a",Se,[e("min"),o(r)]),e(" 和 "),t("a",Pe,[e("max"),o(r)]),e(" 拷贝到当前对象。")]),t("h3",Oe,[De,e(" ."),t("a",Ee,[e("distanceToPoint"),o(r)]),e(" ( point : "),t("a",Te,[e("Vector3"),o(r)]),e(" ) : Float")]),t("p",null,[t("a",we,[e("point"),o(r)]),e(" - 用来测试距离的点 "),t("a",Ae,[e("Vector3"),o(r)]),e("。")]),Ie,t("h3",Fe,[Me,e(" ."),t("a",Ce,[e("equals"),o(r)]),e(" ( box : "),t("a",Re,[e("Box3"),o(r)]),e(" ) : Boolean")]),t("p",null,[t("a",qe,[e("box"),o(r)]),e(" - 将box与当前对象做比较。")]),t("p",null,[e("返回true如果传入的值与当前的对象 "),t("a",He,[e("box"),o(r)]),e(" 有相同的上下边界。")]),t("h3",Ne,[Le,e(" ."),t("a",We,[e("expandByObject"),o(r)]),e(" ( object : "),t("a",Ge,[e("Object3D"),o(r)]),e(" ) : this")]),t("p",null,[t("a",Xe,[e("object"),o(r)]),e(" - 包裹在包围盒中的3d对象 "),t("a",Ye,[e("Object3D"),o(r)]),e("。")]),Ze,t("h3",$e,[Je,e(" ."),t("a",Ke,[e("expandByPoint"),o(r)]),e(" ( point : "),t("a",Qe,[e("Vector3"),o(r)]),e(" ) : this")]),t("p",null,[t("a",Ue,[e("point"),o(r)]),e(" - 需要在包围盒中的点 "),t("a",et,[e("Vector3"),o(r)]),e("。")]),t("p",null,[e("扩展这个包围盒的边界使得该点（"),t("a",tt,[e("point"),o(r)]),e("）在包围盒内。")]),t("h3",rt,[ot,e(" ."),t("a",nt,[e("expandByScalar"),o(r)]),e(" ( scalar : Float ) : this")]),ht,at,t("h3",st,[it,e(" ."),t("a",ct,[e("expandByVector"),o(r)]),e(" ( vector : "),t("a",dt,[e("Vector3"),o(r)]),e(" ) : this")]),t("p",null,[t("a",lt,[e("vector"),o(r)]),e(" - 扩展包围盒的数值 "),t("a",pt,[e("Vector3"),o(r)]),e(" 。")]),t("p",null,[e("按 "),t("a",_t,[e("vector"),o(r)]),e(" 每个纬度的值展开这个箱子。 这个盒子的宽度将由 "),t("a",mt,[e("vector"),o(r)]),e(" 的x分量在两个方向上展开。 这个盒子的高度将由 "),t("a",ft,[e("vector"),o(r)]),e(" 两个方向上的y分量展开。 这个盒子的深度将由 "),t("a",xt,[e("vector"),o(r)]),e(" z分量在两个方向上展开。")]),t("h3",gt,[bt,e(" ."),t("a",ut,[e("getBoundingSphere"),o(r)]),e(" ( target : "),t("a",kt,[e("Sphere"),o(r)]),e(" ) : "),t("a",jt,[e("Sphere"),o(r)])]),t("p",null,[t("a",zt,[e("target"),o(r)]),e(" — 如果指定了target ，结果将会被拷贝到target。")]),t("p",null,[e("获取一个包围球 "),t("a",Bt,[e("Sphere"),o(r)]),e("。")]),t("h3",Vt,[yt,e(" ."),t("a",vt,[e("getCenter"),o(r)]),e(" ( target : "),t("a",St,[e("Vector3"),o(r)]),e(" ) : "),t("a",Pt,[e("Vector3"),o(r)])]),t("p",null,[t("a",Ot,[e("target"),o(r)]),e(" — 如果指定了target ，结果将会被拷贝到target。")]),t("p",null,[e("返回包围盒的中心点 "),t("a",Dt,[e("Vector3"),o(r)]),e("。")]),t("h3",Et,[Tt,e(" ."),t("a",wt,[e("getParameter"),o(r)]),e(" ( point : "),t("a",At,[e("Vector3"),o(r)]),e(", target : "),t("a",It,[e("Vector3"),o(r)]),e(" ) : "),t("a",Ft,[e("Vector3"),o(r)])]),t("p",null,[t("a",Mt,[e("point"),o(r)]),e(" - "),t("a",Ct,[e("Vector3"),o(r)]),e(". "),t("a",Rt,[e("target"),o(r)]),e(" — 如果指定了target ，结果将会被拷贝到target。")]),qt,t("h3",Ht,[Nt,e(" ."),t("a",Lt,[e("getSize"),o(r)]),e(" ( target : "),t("a",Wt,[e("Vector3"),o(r)]),e(" ) : "),t("a",Gt,[e("Vector3"),o(r)])]),t("p",null,[t("a",Xt,[e("target"),o(r)]),e(" — 如果指定了target ，结果将会被拷贝到target。")]),Yt,t("h3",Zt,[$t,e(" ."),t("a",Jt,[e("intersect"),o(r)]),e(" ( box : "),t("a",Kt,[e("Box3"),o(r)]),e(" ) : this")]),t("p",null,[t("a",Qt,[e("box"),o(r)]),e(" - 与包围盒的交集")]),t("p",null,[e("计算此包围盒和 "),t("a",Ut,[e("box"),o(r)]),e(" 的交集，将此框的上界设置为两个框的max的较小部分， 将此包围盒的下界设置为两个包围盒的min的较大部分。如果两个包围盒不相交，则清空此包围盒。")]),t("h3",er,[tr,e(" ."),t("a",rr,[e("intersectsBox"),o(r)]),e(" ( box : "),t("a",or,[e("Box3"),o(r)]),e(" ) : Boolean")]),t("p",null,[t("a",nr,[e("box"),o(r)]),e(" - 用来检测是否相交的包围盒")]),t("p",null,[e("确定当前包围盒是否与传入包围盒"),t("a",hr,[e("box"),o(r)]),e(" 相交。")]),t("h3",ar,[sr,e(" ."),t("a",ir,[e("intersectsPlane"),o(r)]),e(" ( plane : "),t("a",cr,[e("Plane"),o(r)]),e(" ) : Boolean")]),t("p",null,[t("a",dr,[e("plane"),o(r)]),e(" - 用来检测是否相交的 "),t("a",lr,[e("Plane"),o(r)]),e("。")]),t("p",null,[e("确定当前包围盒是否与平面 "),t("a",pr,[e("plane"),o(r)]),e(" 相交。")]),t("h3",_r,[mr,e(" ."),t("a",fr,[e("intersectsSphere"),o(r)]),e(" ( sphere : "),t("a",xr,[e("Sphere"),o(r)]),e(" ) : Boolean")]),t("p",null,[t("a",gr,[e("sphere"),o(r)]),e(" - 用来检测是否相交的球体 "),t("a",br,[e("Sphere"),o(r)]),e("。")]),t("p",null,[e("确定当前包围盒是否与球体 "),t("a",ur,[e("sphere"),o(r)]),e(" 相交。")]),t("h3",kr,[jr,e(" ."),t("a",zr,[e("intersectsTriangle"),o(r)]),e(" ( triangle : "),t("a",Br,[e("Triangle"),o(r)]),e(" ) : Boolean")]),t("p",null,[t("a",Vr,[e("triangle"),o(r)]),e(" - 用来检测是否相交的三角形 "),t("a",yr,[e("Triangle"),o(r)]),e("。")]),t("p",null,[e("确定当前包围盒是否与三角形 "),t("a",vr,[e("triangle"),o(r)]),e(" 相交。")]),t("h3",Sr,[Pr,e(" ."),t("a",Or,[e("isEmpty"),o(r)]),e(" () : Boolean")]),Dr,t("h3",Er,[Tr,e(" ."),t("a",wr,[e("makeEmpty"),o(r)]),e(" () : this")]),Ar,t("h3",Ir,[Fr,e(" ."),t("a",Mr,[e("set"),o(r)]),e(" ( min : "),t("a",Cr,[e("Vector3"),o(r)]),e(", max : "),t("a",Rr,[e("Vector3"),o(r)]),e(" ) : this")]),t("p",null,[t("a",qr,[e("min"),o(r)]),e(" - "),t("a",Hr,[e("Vector3"),o(r)]),e(" 表示下边界每个纬度（x,y,z）的值。 "),t("a",Nr,[e("max"),o(r)]),e(" - "),t("a",Lr,[e("Vector3"),o(r)]),e(" 表示上边界每个纬度（x,y,z）的值。")]),Wr,t("h3",Gr,[Xr,e(" ."),t("a",Yr,[e("setFromArray"),o(r)]),e(" ( array : Array ) : this")]),Zr,$r,t("h3",Jr,[Kr,e(" ."),t("a",Qr,[e("setFromBufferAttribute"),o(r)]),e(" ( attribute : "),t("a",Ur,[e("BufferAttribute"),o(r)]),e(" ) : this")]),t("p",null,[t("a",eo,[e("attribute"),o(r)]),e(" - 位置的缓冲数据，包含在返回的包围盒内。")]),t("p",null,[e("设置此包围盒的上边界和下边界，以包含 "),t("a",to,[e("attribute"),o(r)]),e(" 中的所有位置数据。")]),t("h3",ro,[oo,e(" ."),t("a",no,[e("setFromCenterAndSize"),o(r)]),e(" ( center : "),t("a",ho,[e("Vector3"),o(r)]),e(", size : "),t("a",ao,[e("Vector3"),o(r)]),e(" ) : this")]),t("p",null,[t("a",so,[e("center"),o(r)]),e(", - 包围盒所要设置的中心位置。 "),t("a",io,[e("size"),o(r)]),e(" - 包围盒所要设置的x、y和z尺寸（宽/高/长）。")]),t("p",null,[e("将当前包围盒的中心点设置为 "),t("a",co,[e("center"),o(r)]),e(" ，并将此包围盒的宽度，高度和深度设置为大小指定 "),t("a",lo,[e("size"),o(r)]),e(" 的值。")]),t("h3",po,[_o,e(" ."),t("a",mo,[e("setFromObject"),o(r)]),e(" ( object : "),t("a",fo,[e("Object3D"),o(r)]),e(" ) : this")]),t("p",null,[t("a",xo,[e("object"),o(r)]),e(" - 用来计算包围盒的3D对象 "),t("a",go,[e("Object3D"),o(r)]),e("。")]),t("p",null,[e("计算和世界轴对齐的一个对象 "),t("a",bo,[e("Object3D"),o(r)]),e(" （含其子对象）的包围盒，计算对象和子对象的世界坐标变换。 该方法可能会导致一个比严格需要的更大的框。")]),t("h3",uo,[ko,e(" ."),t("a",jo,[e("setFromPoints"),o(r)]),e(" ( points : Array ) : this")]),t("p",null,[e("points - 计算出的包围盒将包含数组中所有的点 "),t("a",zo,[e("Vector3s"),o(r)])]),Bo,t("h3",Vo,[yo,e(" ."),t("a",vo,[e("translate"),o(r)]),e(" ( offset : "),t("a",So,[e("Vector3"),o(r)]),e(" ) : this")]),t("p",null,[t("a",Po,[e("offset"),o(r)]),e(" - 偏移方向和距离。")]),t("p",null,[e("给包围盒的上下边界添加偏移量 "),t("a",Oo,[e("offset"),o(r)]),e("，这样可以有效的在3D空间中移动包围盒。 偏移量为 "),t("a",Do,[e("offset"),o(r)]),e(" 大小。")]),t("h3",Eo,[To,e(" ."),t("a",wo,[e("union"),o(r)]),e(" ( box : "),t("a",Ao,[e("Box3"),o(r)]),e(" ) : this")]),t("p",null,[t("a",Io,[e("box"),o(r)]),e(" - 将被用于与该盒子计算并集的盒子。")]),t("p",null,[e("在 "),t("a",Fo,[e("box"),o(r)]),e(" 参数的上边界和已有box对象的上边界之间取较大者，而对两者的下边界取较小者，这样获得一个新的较大的联合盒子。")])])}const Ho=n(c,[["render",Mo],["__file","Box3.html.vue"]]);export{Ho as default};
