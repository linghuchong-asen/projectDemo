import{_ as p,V as i,W as l,Y as n,Z as a,$ as s,a0 as o,X as r,D as c}from"./framework-34e2585c.js";const d={},u=n("h1",{id:"光线投射raycaster",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#光线投射raycaster","aria-hidden":"true"},"#"),a(" 光线投射Raycaster")],-1),h={href:"https://en.wikipedia.org/wiki/Ray_casting",target:"_blank",rel:"noopener noreferrer"},k=r(`<h2 id="代码示例" tabindex="-1"><a class="header-anchor" href="#代码示例" aria-hidden="true">#</a> 代码示例</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> raycaster <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Raycaster</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token keyword">const</span> pointer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token keyword">function</span> <span class="token function">onPointerMove</span><span class="token punctuation">(</span> <span class="token parameter">event</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span> 	
    <span class="token comment">// 将鼠标位置归一化为设备坐标。x 和 y 方向的取值范围是 (-1 to +1) 	</span>
    pointer<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token punctuation">(</span> event<span class="token punctuation">.</span>clientX <span class="token operator">/</span> window<span class="token punctuation">.</span>innerWidth <span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> 
    pointer<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token operator">-</span> <span class="token punctuation">(</span> event<span class="token punctuation">.</span>clientY <span class="token operator">/</span> window<span class="token punctuation">.</span>innerHeight <span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span> 
<span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 	
    <span class="token comment">// 通过摄像机和鼠标位置更新射线 </span>
    raycaster<span class="token punctuation">.</span><span class="token function">setFromCamera</span><span class="token punctuation">(</span> pointer<span class="token punctuation">,</span> camera <span class="token punctuation">)</span><span class="token punctuation">;</span> 	
    <span class="token comment">// 计算物体和射线的焦点 </span>
    <span class="token keyword">const</span> intersects <span class="token operator">=</span> raycaster<span class="token punctuation">.</span><span class="token function">intersectObjects</span><span class="token punctuation">(</span> scene<span class="token punctuation">.</span>children <span class="token punctuation">)</span><span class="token punctuation">;</span> 	
    <span class="token keyword">for</span> <span class="token punctuation">(</span> <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> intersects<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">++</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span> 		
        intersects<span class="token punctuation">[</span> i <span class="token punctuation">]</span><span class="token punctuation">.</span>object<span class="token punctuation">.</span>material<span class="token punctuation">.</span>color<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span> <span class="token number">0xff0000</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> 	
    <span class="token punctuation">}</span> 	
    renderer<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span> scene<span class="token punctuation">,</span> camera <span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span> 
window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span> <span class="token string">&#39;pointermove&#39;</span><span class="token punctuation">,</span> onPointerMove <span class="token punctuation">)</span><span class="token punctuation">;</span> 
window<span class="token punctuation">.</span><span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>render<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="构造器" tabindex="-1"><a class="header-anchor" href="#构造器" aria-hidden="true">#</a> 构造器</h2><h3 id="raycaster" tabindex="-1"><a class="header-anchor" href="#raycaster" aria-hidden="true">#</a> Raycaster()</h3><p>这将创建一个新的raycaster对象。</p><h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性" aria-hidden="true">#</a> 属性</h2>`,6),_={id:"far-float",tabindex:"-1"},m=n("a",{class:"header-anchor",href:"#far-float","aria-hidden":"true"},"#",-1),b={href:"https://threejs.org/docs/index.html#api/zh/core/Raycaster.far",target:"_blank",rel:"noopener noreferrer"},v=n("p",null,"raycaster的远距离因数（投射远点）。这个值表明哪些对象可以基于该距离而被raycaster所丢弃。 这个值不应当为负，并且应当比near属性大。",-1),f={id:"near-float",tabindex:"-1"},y=n("a",{class:"header-anchor",href:"#near-float","aria-hidden":"true"},"#",-1),g={href:"https://threejs.org/docs/index.html#api/zh/core/Raycaster.near",target:"_blank",rel:"noopener noreferrer"},j=n("p",null,"raycaster的近距离因数（投射近点）。这个值表明哪些对象可以基于该距离而被raycaster所丢弃。 这个值不应当为负，并且应当比far属性小。",-1),x={id:"camera-camera",tabindex:"-1"},R=n("a",{class:"header-anchor",href:"#camera-camera","aria-hidden":"true"},"#",-1),w={href:"https://threejs.org/docs/index.html#api/zh/core/Raycaster.camera",target:"_blank",rel:"noopener noreferrer"},z={href:"https://threejs.org/docs/index.html#api/zh/cameras/Camera",target:"_blank",rel:"noopener noreferrer"},V=n("p",null,[a("当对依赖于视图的对象进行光线投射时使用的摄影机。此字段可以手动设置，也可以在调用“setFromCamera”时设置。默认值为"),n("code",null,"null"),a("。")],-1),A={id:"layers-layers",tabindex:"-1"},C=n("a",{class:"header-anchor",href:"#layers-layers","aria-hidden":"true"},"#",-1),O={href:"https://threejs.org/docs/index.html#api/zh/core/Raycaster.layers",target:"_blank",rel:"noopener noreferrer"},E={href:"https://threejs.org/docs/index.html#api/zh/core/Layers",target:"_blank",rel:"noopener noreferrer"},T=r(`<p>Raycaster 在执行相交测试时有选择地忽略 3D 对象。</p><p>下面的代码示例确保只有第 1 层上的 3D 对象才会被 Raycaster 实例接受。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>raycaster<span class="token punctuation">.</span>layers<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span> <span class="token number">1</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
object<span class="token punctuation">.</span>layers<span class="token punctuation">.</span><span class="token function">enable</span><span class="token punctuation">(</span> <span class="token number">1</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,3),D={id:"params-object",tabindex:"-1"},I=n("a",{class:"header-anchor",href:"#params-object","aria-hidden":"true"},"#",-1),L={href:"https://threejs.org/docs/index.html#api/zh/core/Raycaster.params",target:"_blank",rel:"noopener noreferrer"},F=r(`<p>具有以下属性的对象：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span> 
    <span class="token literal-property property">Mesh</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> 
    <span class="token literal-property property">Line</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">threshold</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> 
    <span class="token constant">LOD</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">Points</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">threshold</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> 
    <span class="token literal-property property">Sprite</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>射线求交物体时阈值的精度，单位为世界坐标系。</p>`,3),P={id:"ray-ray",tabindex:"-1"},N=n("a",{class:"header-anchor",href:"#ray-ray","aria-hidden":"true"},"#",-1),B={href:"https://threejs.org/docs/index.html#api/zh/core/Raycaster.ray",target:"_blank",rel:"noopener noreferrer"},H={href:"https://threejs.org/docs/index.html#api/zh/math/Ray",target:"_blank",rel:"noopener noreferrer"},M={href:"https://threejs.org/docs/index.html#api/zh/math/Ray",target:"_blank",rel:"noopener noreferrer"},S=n("h2",{id:"方法",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#方法","aria-hidden":"true"},"#"),a(" 方法")],-1),X={id:"set-origin-direction-undefined",tabindex:"-1"},Y=n("a",{class:"header-anchor",href:"#set-origin-direction-undefined","aria-hidden":"true"},"#",-1),U={href:"https://threejs.org/docs/index.html#api/zh/core/Raycaster.set",target:"_blank",rel:"noopener noreferrer"},W=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"Description")])],-1),q=n("td",null,"origin",-1),Z=n("td",null,"光线投射的原点向量。",-1),$=n("td",null,"direction",-1),G=n("td",null,"为光线提供方向的标准化方向向量。",-1),J=n("p",null,"使用一个新的原点和方向来更新射线。",-1),K={id:"setfromcamera-vector2-camera-undefined",tabindex:"-1"},Q=n("a",{class:"header-anchor",href:"#setfromcamera-vector2-camera-undefined","aria-hidden":"true"},"#",-1),nn={href:"https://threejs.org/docs/index.html#api/zh/core/Raycaster.setFromCamera",target:"_blank",rel:"noopener noreferrer"},an={href:"https://threejs.org/docs/index.html#api/zh/math/Vector2",target:"_blank",rel:"noopener noreferrer"},sn={href:"https://threejs.org/docs/index.html#api/zh/cameras/Camera",target:"_blank",rel:"noopener noreferrer"},en=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"Description")])],-1),tn=n("td",null,"coords",-1),on=n("td",null,"在标准化设备坐标中鼠标的二维坐标 —— X分量与Y分量应当在-1到1之间。",-1),rn=n("td",null,"camera",-1),cn=n("td",null,"射线所来源的摄像机。",-1),pn=n("p",null,"使用一个新的原点和方向来更新射线。",-1),ln={id:"intersectobject-object-object3d-recursive-boolean-optionaltarget-array-array",tabindex:"-1"},dn=n("a",{class:"header-anchor",href:"#intersectobject-object-object3d-recursive-boolean-optionaltarget-array-array","aria-hidden":"true"},"#",-1),un={href:"https://threejs.org/docs/index.html#api/zh/core/Raycaster.intersectObject",target:"_blank",rel:"noopener noreferrer"},hn={href:"https://threejs.org/docs/index.html#api/zh/core/Object3D",target:"_blank",rel:"noopener noreferrer"},kn=r(`<p>object —— 检查与射线相交的物体。</p><p>recursive —— 若为true，则同时也会检查所有的后代。否则将只会检查对象本身。默认值为true。</p><p>optionalTarget — （可选）设置结果的目标数组。如果不设置这个值，则一个新的Array会被实例化；如果设置了这个值，则在每次调用之前必须清空这个数组（例如：array.length = 0;）。</p><p>检测所有在射线与物体之间，包括或不包括后代的相交部分。返回结果时，相交部分将按距离进行排序，最近的位于第一个。 该方法返回一个包含有交叉部分的数组:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[ { distance, point, face, faceIndex, object }, ... ]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>distance —— 射线投射原点和相交部分之间的距离。</p><p>point —— 相交部分的点（世界坐标）</p><p>face —— 相交的面</p><p>faceIndex —— 相交的面的索引</p><p>object —— 相交的物体</p><p>uv —— 相交部分的点的UV坐标。</p><p>uv2 —— 交点处的第二组U、V坐标。</p><p>instanceId – 光线与实例化网格相交的实例的索引编号。</p><p>当计算这条射线是否和物体相交的时候，<strong>Raycaster</strong>将传入的对象委托给raycast方法。 这将可以让mesh对于光线投射的响应不同于lines和pointclouds。</p><p><strong>请注意</strong>：对于网格来说，面必须朝向射线的原点，以便其能够被检测到。 用于交互的射线穿过面的背侧时，将不会被检测到。如果需要对物体中面的两侧进行光线投射， 你需要将material中的side属性设置为<strong>THREE.DoubleSide</strong>。</p>`,15),_n={id:"intersectobjects-objects-array-recursive-boolean-optionaltarget-array-array",tabindex:"-1"},mn=n("a",{class:"header-anchor",href:"#intersectobjects-objects-array-recursive-boolean-optionaltarget-array-array","aria-hidden":"true"},"#",-1),bn={href:"https://threejs.org/docs/index.html#api/zh/core/Raycaster.intersectObjects",target:"_blank",rel:"noopener noreferrer"},vn=n("p",null,"objects —— 检测和射线相交的一组物体。 recursive —— 若为true，则同时也会检测所有物体的后代。否则将只会检测对象本身的相交部分。默认值为true。 optionalTarget —— （可选）设置结果的目标数组。如果不设置这个值，则一个新的Array会被实例化；如果设置了这个值，则在每次调用之前必须清空这个数组（例如：array.length = 0;）。",-1),fn={href:"https://threejs.org/docs/index.html#api/zh/core/Raycaster.intersectObject",target:"_blank",rel:"noopener noreferrer"};function yn(gn,jn){const e=c("ExternalLinkIcon"),t=c("RouterLink");return i(),l("div",null,[u,n("p",null,[a("这个类用于进行"),n("a",h,[a("raycasting"),s(e)]),a("（光线投射）。 光线投射用于进行鼠标拾取（在三维空间中计算出鼠标移过了什么物体）。")]),k,n("h3",_,[m,a(" ."),n("a",b,[a("far"),s(e)]),a(" : Float")]),v,n("h3",f,[y,a(" ."),n("a",g,[a("near"),s(e)]),a(" : Float")]),j,n("h3",x,[R,a(" ."),n("a",w,[a("camera"),s(e)]),a(" : "),n("a",z,[a("Camera"),s(e)])]),V,n("h3",A,[C,a(" ."),n("a",O,[a("layers"),s(e)]),a(" : "),n("a",E,[a("Layers"),s(e)])]),T,n("h3",D,[I,a(" ."),n("a",L,[a("params"),s(e)]),a(" : Object")]),F,n("h3",P,[N,a(" ."),n("a",B,[a("ray"),s(e)]),a(" : "),n("a",H,[a("Ray"),s(e)])]),n("p",null,[a("用于进行光线投射的"),n("a",M,[a("Ray"),s(e)]),a("（射线）。")]),S,n("h3",X,[Y,a(" ."),n("a",U,[a("set"),s(e)]),a(" ( origin , direction) : undefined")]),n("table",null,[W,n("tbody",null,[n("tr",null,[q,n("td",null,[s(t,{to:"/APIdocs/math/Vector3.html"},{default:o(()=>[a("Vector3")]),_:1})]),Z]),n("tr",null,[$,n("td",null,[s(t,{to:"/APIdocs/math/Vector3.html"},{default:o(()=>[a("Vector3")]),_:1})]),G])])]),J,n("h3",K,[Q,a(" ."),n("a",nn,[a("setFromCamera"),s(e)]),a(" ( : "),n("a",an,[a("Vector2"),s(e)]),a(", : "),n("a",sn,[a("Camera"),s(e)]),a(" ) : undefined")]),n("table",null,[en,n("tbody",null,[n("tr",null,[tn,n("td",null,[s(t,{to:"/APIdocs/math/Vector2.html"},{default:o(()=>[a("Vector2")]),_:1})]),on]),n("tr",null,[rn,n("td",null,[s(t,{to:"/APIdocs/basic/Camera.html"},{default:o(()=>[a("Camera")]),_:1})]),cn])])]),pn,n("h3",ln,[dn,a(" ."),n("a",un,[a("intersectObject"),s(e)]),a(" ( object : "),n("a",hn,[a("Object3D"),s(e)]),a(", recursive : Boolean, optionalTarget : Array ) : Array")]),kn,n("h3",_n,[mn,a(" ."),n("a",bn,[a("intersectObjects"),s(e)]),a(" ( objects : Array, recursive : Boolean, optionalTarget : Array ) : Array")]),vn,n("p",null,[a("检测所有在射线与这些物体之间，包括或不包括后代的相交部分。返回结果时，相交部分将按距离进行排序，最近的位于第一个），相交部分和"),n("a",fn,[a(".intersectObject"),s(e)]),a("所返回的格式是相同的。")])])}const Rn=p(d,[["render",yn],["__file","Raycaster.html.vue"]]);export{Rn as default};
