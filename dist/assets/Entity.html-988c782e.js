import{_ as s,V as d,W as h,X as t,Y as e,$ as l,a0 as i,Z as a,D as r}from"./framework-13182686.js";const c={},p=t("h1",{id:"实体-entity",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#实体-entity","aria-hidden":"true"},"#"),e(" 实体(Entity)")],-1),g={href:"https://www.vvpstk.com/public/Cesium/Documentation/Viewer.html#entities",target:"_blank",rel:"noopener noreferrer"},u=t("code",null,"Viewer#entities",-1),y={href:"https://www.vvpstk.com/public/Cesium/Documentation/CzmlDataSource.html",target:"_blank",rel:"noopener noreferrer"},f=t("code",null,"CzmlDataSource",-1),_={href:"https://www.vvpstk.com/public/Cesium/Documentation/GeoJsonDataSource.html",target:"_blank",rel:"noopener noreferrer"},x=t("code",null,"GeoJsonDataSource",-1),b=t("h2",{id:"构造器",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#构造器","aria-hidden":"true"},"#"),e(" 构造器")],-1),m=t("p",null,[t("strong",null,"Entity(options)")],-1),w=t("p",null,"options对象，具有以下属性：",-1),v=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),G=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"id")]),t("td",{style:{"text-align":"left"}},"String"),t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("此对象的唯一标识符。如果没有提供，则生成GUID。")])],-1),D=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"name")]),t("td",{style:{"text-align":"left"}},"String"),t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("指定名字，它不必是唯一的。")])],-1),C=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"availability")]),t("td",{style:{"text-align":"left"}},"TimeIntervalCollection"),t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("与此对象相关联的时间区间集合，超出该时间集合，对象将不可用。")])],-1),k=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"show")]),t("td",{style:{"text-align":"left"}},"Boolean"),t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("是否显示实体和它的children（子实体）。")])],-1),P=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"description")]),t("td",{style:{"text-align":"left"}},"Property"),t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("指定此实体的HTML描述的字符串属性。")])],-1),E=t("td",{style:{"text-align":"left"}},[t("code",null,"position"),e("🚩")],-1),T={style:{"text-align":"left"}},N=t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("指定实体位置的属性。")],-1),S=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"orientation")]),t("td",{style:{"text-align":"left"}},"Property"),t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("指定实体方向的属性。")])],-1),B=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"viewFrom")]),t("td",{style:{"text-align":"left"}},"Property"),t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("用于查看该对象的建议初始偏移量。")])],-1),V=t("td",{style:{"text-align":"left"}},[t("code",null,"parent")],-1),M={style:{"text-align":"left"}},I=t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("和这个对象关联的父实体.")],-1),L=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"billboard")]),t("td",{style:{"text-align":"left"}},"BillboardGraphics"),t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("与此实体关联的布告板。")])],-1),J=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"box")]),t("td",{style:{"text-align":"left"}},"BoxGraphics"),t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("与此实体关联的盒子.")])],-1),A=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"corridor")]),t("td",{style:{"text-align":"left"}},"CorridorGraphics"),t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("与此实体关联的廊道。")])],-1),R=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"cylinder")]),t("td",{style:{"text-align":"left"}},"CylinderGraphics"),t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("与此实体关联的圆柱体。")])],-1),W=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"ellipse")]),t("td",{style:{"text-align":"left"}},"EllipseGraphics"),t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("与此实体关联的椭圆或圆。")])],-1),z=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"ellipsoid")]),t("td",{style:{"text-align":"left"}},"EllipsoidGraphics"),t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("与此实体关联的椭球或球。")])],-1),F=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"label")]),t("td",{style:{"text-align":"left"}},"LabelGraphics"),t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("与此实体关联的标注。")])],-1),O=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"model"),e("🚩")]),t("td",{style:{"text-align":"left"}},"ModelGraphics"),t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("与此实体关联的模型。")])],-1),H=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"path")]),t("td",{style:{"text-align":"left"}},"PathGraphics"),t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("与此实体关联的路径。")])],-1),U=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"plane")]),t("td",{style:{"text-align":"left"}},"PlaneGraphics"),t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("与此实体关联的平面。")])],-1),X=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"point")]),t("td",{style:{"text-align":"left"}},"PointGraphics"),t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("与此实体关联的点。")])],-1),Y=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"polygon")]),t("td",{style:{"text-align":"left"}},"PolygonGraphics"),t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("与此实体关联的多边形。")])],-1),Z=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"polyline")]),t("td",{style:{"text-align":"left"}},"PolylineGraphics"),t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("与此实体关联的折线。")])],-1),$=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"properties")]),t("td",{style:{"text-align":"left"}},"PropertyBag"),t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("与此实体关联的任意属性。")])],-1),j=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"polylineVolume")]),t("td",{style:{"text-align":"left"}},"PolylineVolumeGraphics"),t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("与此实体关联的折线体。")])],-1),q=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"rectangle")]),t("td",{style:{"text-align":"left"}},"RectangleGraphics"),t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("与此实体关联的矩形。")])],-1),K=t("tr",null,[t("td",{style:{"text-align":"left"}},[t("code",null,"wall")]),t("td",{style:{"text-align":"left"}},"WallGraphics"),t("td",{style:{"text-align":"left"}},[t("code",null,"optional"),e("与此实体关联的墙体。")])],-1),Q=a('<h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性" aria-hidden="true">#</a> 属性</h2><h3 id="availability-timeintervalcollection" tabindex="-1"><a class="header-anchor" href="#availability-timeintervalcollection" aria-hidden="true">#</a> <strong><a href="">availability : TimeIntervalCollection</a></strong></h3><p>与此对象关联的可用性（如果有的话）。 如果可用性未定义，则假定此对象的其他属性将在任何给定时间内返回有效数据。 如果存在可用性，对象的其他属性将仅在给定时间间隔内查询时提供有效数据。</p><h3 id="billboard-billboardgraphics" tabindex="-1"><a class="header-anchor" href="#billboard-billboardgraphics" aria-hidden="true">#</a> <strong><a href="">billboard : BillboardGraphics</a></strong></h3><p>获取/设置布告板。</p><h3 id="box-boxgraphics" tabindex="-1"><a class="header-anchor" href="#box-boxgraphics" aria-hidden="true">#</a> <strong><a href="">box : BoxGraphics</a></strong></h3><p>获取/设置box.</p><h3 id="corridor-corridorgraphics" tabindex="-1"><a class="header-anchor" href="#corridor-corridorgraphics" aria-hidden="true">#</a> <strong><a href="">corridor : CorridorGraphics</a></strong></h3><p>获取/设置廊道。</p><h3 id="cylinder-cylindergraphics" tabindex="-1"><a class="header-anchor" href="#cylinder-cylindergraphics" aria-hidden="true">#</a> <strong><a href="">cylinder : CylinderGraphics</a></strong></h3><p>获取/设置圆柱。</p><h3 id="readonly-definitionchanged-event" tabindex="-1"><a class="header-anchor" href="#readonly-definitionchanged-event" aria-hidden="true">#</a> <code>readonly</code> <strong><a href="">definitionChanged : Event</a></strong></h3><p>获取每当更改或修改属性或子属性时引发的事件。</p><h3 id="description-property" tabindex="-1"><a class="header-anchor" href="#description-property" aria-hidden="true">#</a> <strong><a href="">description : Property</a></strong></h3><p>获取/设置描述。</p><h3 id="ellipse-ellipsegraphics" tabindex="-1"><a class="header-anchor" href="#ellipse-ellipsegraphics" aria-hidden="true">#</a> <strong><a href="">ellipse : EllipseGraphics</a></strong></h3><p>获取/设置椭圆。</p><h3 id="ellipsoid-ellipsoidgraphics" tabindex="-1"><a class="header-anchor" href="#ellipsoid-ellipsoidgraphics" aria-hidden="true">#</a> <strong><a href="">ellipsoid : EllipsoidGraphics</a></strong></h3><p>获取/设置椭球。</p><h3 id="entitycollection-entitycollection" tabindex="-1"><a class="header-anchor" href="#entitycollection-entitycollection" aria-hidden="true">#</a> <strong><a href="">entityCollection : EntityCollection</a></strong></h3><p>获取或设置此实体所属的实体集合</p><h3 id="id-string" tabindex="-1"><a class="header-anchor" href="#id-string" aria-hidden="true">#</a> <strong><a href="">id : String</a></strong></h3><p>获取与此对象关联的唯一ID。</p><h3 id="isshowing-boolean" tabindex="-1"><a class="header-anchor" href="#isshowing-boolean" aria-hidden="true">#</a> <strong><a href="">isShowing : Boolean</a></strong></h3><p>获取是否显示此实体，并考虑到任何祖先实体的可见性。</p><h3 id="label-labelgraphics" tabindex="-1"><a class="header-anchor" href="#label-labelgraphics" aria-hidden="true">#</a> <strong><a href="">label : LabelGraphics</a></strong></h3><p>获取/设置标注。</p><h3 id="model-modelgraphics" tabindex="-1"><a class="header-anchor" href="#model-modelgraphics" aria-hidden="true">#</a> <strong><a href="">model : ModelGraphics</a></strong></h3><p>获取/设置模型。</p><h3 id="name-string" tabindex="-1"><a class="header-anchor" href="#name-string" aria-hidden="true">#</a> <strong><a href="">name : String</a></strong></h3><p>获取或设置该对象的名称（不需要是唯一的）。</p><h3 id="orientation-property" tabindex="-1"><a class="header-anchor" href="#orientation-property" aria-hidden="true">#</a> <strong><a href="">orientation : Property</a></strong></h3><p>设置/获取方向。</p><h3 id="parent-entity" tabindex="-1"><a class="header-anchor" href="#parent-entity" aria-hidden="true">#</a> <strong><a href="">parent : Entity</a></strong></h3><p>获取/设置父对象。</p><h3 id="path-pathgraphics" tabindex="-1"><a class="header-anchor" href="#path-pathgraphics" aria-hidden="true">#</a> <strong><a href="">path : PathGraphics</a></strong></h3><p>设置/获取路径。</p><h3 id="plane-planegraphics" tabindex="-1"><a class="header-anchor" href="#plane-planegraphics" aria-hidden="true">#</a> <strong><a href="">plane : PlaneGraphics</a></strong></h3><p>设置/获取飞机。</p><h3 id="point-pointgraphics" tabindex="-1"><a class="header-anchor" href="#point-pointgraphics" aria-hidden="true">#</a> <strong><a href="">point : PointGraphics</a></strong></h3><p>设置/获取点。</p><h3 id="polygon-polygongraphics" tabindex="-1"><a class="header-anchor" href="#polygon-polygongraphics" aria-hidden="true">#</a> <strong><a href="">polygon : PolygonGraphics</a></strong></h3><p>设置/获取多边形。</p><h3 id="polyline-polylinegraphics" tabindex="-1"><a class="header-anchor" href="#polyline-polylinegraphics" aria-hidden="true">#</a> <strong><a href="">polyline : PolylineGraphics</a></strong></h3><p>设置/获取多折线。</p><h3 id="polylinevolume-polylinevolumegraphics" tabindex="-1"><a class="header-anchor" href="#polylinevolume-polylinevolumegraphics" aria-hidden="true">#</a> <strong><a href="">polylineVolume : PolylineVolumeGraphics</a></strong></h3><p>设置/获取多折线体。</p><h3 id="position-positionproperty" tabindex="-1"><a class="header-anchor" href="#position-positionproperty" aria-hidden="true">#</a> <strong><a href="">position : PositionProperty</a></strong></h3><p>获取/设置位置。</p><h3 id="properties-propertybag" tabindex="-1"><a class="header-anchor" href="#properties-propertybag" aria-hidden="true">#</a> <strong><a href="">properties : PropertyBag</a></strong></h3><p>获取/设置与此实体关联的任意属性。</p><h3 id="propertynames-array" tabindex="-1"><a class="header-anchor" href="#propertynames-array" aria-hidden="true">#</a> <strong><a href="">propertyNames : Array</a></strong></h3><p>获取所有的已注册到该实例的属性。</p><h3 id="rectangle-rectanglegraphics" tabindex="-1"><a class="header-anchor" href="#rectangle-rectanglegraphics" aria-hidden="true">#</a> <strong><a href="">rectangle : RectangleGraphics</a></strong></h3><p>获取/设置矩形。</p><h3 id="show-boolean" tabindex="-1"><a class="header-anchor" href="#show-boolean" aria-hidden="true">#</a> <strong><a href="">show : Boolean</a></strong></h3><p>设置/获取实体显隐性，当其被设置为true的时候，只有当其父节点（如果有的话）也是true的话才显示。</p><h3 id="viewfrom-property" tabindex="-1"><a class="header-anchor" href="#viewfrom-property" aria-hidden="true">#</a> <strong><a href="">viewFrom : Property</a></strong></h3><p>获取或设置跟踪此对象时建议的初始偏移量。 偏移量通常在东北向上的参考系中定义，但是根据物体的速度也可能在另一个参考系中定义。</p><h3 id="wall-wallgraphics" tabindex="-1"><a class="header-anchor" href="#wall-wallgraphics" aria-hidden="true">#</a> <strong><a href="">wall : WallGraphics</a></strong></h3><p>获取/设置墙体。</p><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h2><h3 id="static-supportsmaterialsforentitiesonterrain-scene-boolean" tabindex="-1"><a class="header-anchor" href="#static-supportsmaterialsforentitiesonterrain-scene-boolean" aria-hidden="true">#</a> <code>static</code> <strong><a href="">supportsMaterialsforEntitiesOnTerrain(scene): Boolean</a></strong></h3><p>检查给定场景是否支持覆盖在地形或3D Tiles上的实体的颜色以外的材质。 如果不支持此功能，则使用非彩色材质但没有‘height’的实体将渲染为高度为0。</p>',64),tt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),et=t("td",{style:{"text-align":"left"}},[t("code",null,"scene")],-1),lt={style:{"text-align":"left"}},nt={href:"https://www.vvpstk.com/public/Cesium/Documentation/Scene.html",target:"_blank",rel:"noopener noreferrer"},at=t("td",{style:{"text-align":"left"}},"当前场景.",-1),ot=t("p",null,"返回值: 当前场景是否支持地形上实体的材质。",-1),it=t("h3",{id:"static-supportspolylinesonterrain-scene-boolean",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#static-supportspolylinesonterrain-scene-boolean","aria-hidden":"true"},"#"),e(),t("code",null,"static"),e(),t("strong",null,[t("a",{href:""},"supportsPolylinesOnTerrain(scene): Boolean")])],-1),rt=t("p",null,"检查给定的场景是否支持将折线贴地形或贴3D Tiles。 如果不支持此功能，那么带有PolylineGraphics的实体将会在提供的高度的顶点和使用'arcType ’参数来渲染，而不是贴在地面上。",-1),st=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),dt=t("td",{style:{"text-align":"left"}},[t("code",null,"scene")],-1),ht={style:{"text-align":"left"}},ct={href:"https://www.vvpstk.com/public/Cesium/Documentation/Scene.html",target:"_blank",rel:"noopener noreferrer"},pt=t("td",{style:{"text-align":"left"}},"当前场景。",-1),gt=t("p",null,"返回值: 当前场景是否支持地形或3D Tiles上的折线。",-1),ut=t("h3",{id:"addproperty-propertyname",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#addproperty-propertyname","aria-hidden":"true"},"#"),e(),t("strong",null,[t("a",{href:""},"addProperty(propertyName)")])],-1),yt={href:"https://www.vvpstk.com/public/Cesium/Documentation/Entity.html#definitionChanged",target:"_blank",rel:"noopener noreferrer"},ft=t("code",null,"Entity#definitionChanged",-1),_t={href:"https://www.vvpstk.com/public/Cesium/Documentation/CompositeEntityCollection.html",target:"_blank",rel:"noopener noreferrer"},xt=t("code",null,"CompositeEntityCollection",-1),bt=a('<table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>propertyName</code></td><td style="text-align:left;">String</td><td style="text-align:left;">要添加的属性名。</td></tr></tbody></table><h3 id="computemodelmatrix-time-result-matrix4" tabindex="-1"><a class="header-anchor" href="#computemodelmatrix-time-result-matrix4" aria-hidden="true">#</a> <strong><a href="">computeModelMatrix(time, result): Matrix4</a></strong></h3><p>在指定时间点计算实体转换的模型矩阵。如果方向或位置未定义，则返回未定义。</p>',3),mt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),wt=t("td",{style:{"text-align":"left"}},[t("code",null,"time")],-1),vt={style:{"text-align":"left"}},Gt={href:"https://www.vvpstk.com/public/Cesium/Documentation/JulianDate.html",target:"_blank",rel:"noopener noreferrer"},Dt=t("td",{style:{"text-align":"left"}},"检索模型矩阵的时间。",-1),Ct=t("td",{style:{"text-align":"left"}},[t("code",null,"result")],-1),kt={style:{"text-align":"left"}},Pt={href:"https://www.vvpstk.com/public/Cesium/Documentation/Matrix4.html",target:"_blank",rel:"noopener noreferrer"},Et=t("td",{style:{"text-align":"left"}},"optional存储结果的对象。",-1),Tt=t("p",null,"返回值: 修改后的结果参数，或如果没有提供则为一个新的Matrix4实例。如果位置或方向未定义，则结果未定义。",-1),Nt=t("h3",{id:"isavailable-time-boolean",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#isavailable-time-boolean","aria-hidden":"true"},"#"),e(),t("strong",null,[t("a",{href:""},"isAvailable(time): Boolean")])],-1),St=t("p",null,"给定一个时间，如果此对象在这个时间段内有数据就返回true。",-1),Bt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),Vt=t("td",{style:{"text-align":"left"}},[t("code",null,"time")],-1),Mt={style:{"text-align":"left"}},It={href:"https://www.vvpstk.com/public/Cesium/Documentation/JulianDate.html",target:"_blank",rel:"noopener noreferrer"},Lt=t("td",{style:{"text-align":"left"}},"检查可用性的时间。",-1),Jt=t("p",null,"返回值: 如果在提供的时间内对象应该有数据，则为true，否则为false。",-1),At=t("h3",{id:"merge-source",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#merge-source","aria-hidden":"true"},"#"),e(),t("strong",null,[t("a",{href:""},"merge(source)")])],-1),Rt=t("p",null,"融合对象，对于最终的属性值来说，如果此对象已经定义， 就使用此对象的，反之，使用要融合到该对象的对象的值。",-1),Wt=t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"left"}},"Name"),t("th",{style:{"text-align":"left"}},"Type"),t("th",{style:{"text-align":"left"}},"Description")])],-1),zt=t("td",{style:{"text-align":"left"}},[t("code",null,"source")],-1),Ft={style:{"text-align":"left"}},Ot={href:"https://www.vvpstk.com/public/Cesium/Documentation/Entity.html",target:"_blank",rel:"noopener noreferrer"},Ht=t("td",{style:{"text-align":"left"}},"要融合到该对象的对象。",-1),Ut=a('<h3 id="removeproperty-propertyname" tabindex="-1"><a class="header-anchor" href="#removeproperty-propertyname" aria-hidden="true">#</a> <strong><a href="">removeProperty(propertyName)</a></strong></h3><p>移除属性。</p><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>propertyName</code></td><td style="text-align:left;">String</td><td style="text-align:left;">要移除的属性名。</td></tr></tbody></table>',3);function Xt(Yt,Zt){const n=r("ExternalLinkIcon"),o=r("RouterLink");return d(),h("div",null,[p,t("p",null,[e("Entity实例将多种形式的可视化聚合为单个高级对象。 它们可以手动创建并添加到"),t("a",g,[u,l(n)]),e("中，也可以由数据源生成，比如"),t("a",y,[f,l(n)]),e("和"),t("a",_,[x,l(n)]),e("。")]),b,m,w,t("table",null,[v,t("tbody",null,[G,D,C,k,P,t("tr",null,[E,t("td",T,[l(o,{to:"/APIdocs/math/Vector3.html"},{default:i(()=>[e("Vector3")]),_:1})]),N]),S,B,t("tr",null,[V,t("td",M,[l(o,{to:"/APIdocs/entity/Entity.html"},{default:i(()=>[e("Entity")]),_:1})]),I]),L,J,A,R,W,z,F,O,H,U,X,Y,Z,$,j,q,K])]),Q,t("table",null,[tt,t("tbody",null,[t("tr",null,[et,t("td",lt,[t("a",nt,[e("Scene"),l(n)])]),at])])]),ot,it,rt,t("table",null,[st,t("tbody",null,[t("tr",null,[dt,t("td",ht,[t("a",ct,[e("Scene"),l(n)])]),pt])])]),gt,ut,t("p",null,[e("将属性添加到此对象。一旦属性被添加，就可以用"),t("a",yt,[ft,l(n)]),e("来观察它， 并使用"),t("a",_t,[xt,l(n)]),e("来组合它。")]),bt,t("table",null,[mt,t("tbody",null,[t("tr",null,[wt,t("td",vt,[t("a",Gt,[e("JulianDate"),l(n)])]),Dt]),t("tr",null,[Ct,t("td",kt,[t("a",Pt,[e("Matrix4"),l(n)])]),Et])])]),Tt,Nt,St,t("table",null,[Bt,t("tbody",null,[t("tr",null,[Vt,t("td",Mt,[t("a",It,[e("JulianDate"),l(n)])]),Lt])])]),Jt,At,Rt,t("table",null,[Wt,t("tbody",null,[t("tr",null,[zt,t("td",Ft,[t("a",Ot,[e("Entity"),l(n)])]),Ht])])]),Ut])}const jt=s(c,[["render",Xt],["__file","Entity.html.vue"]]);export{jt as default};
